{"ast":null,"code":"var _jsxFileName = \"/Users/samerkadih/Desktop/Coding/Personal/React/kelly-criterion/src/pages/Game.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Game.module.css\";\nimport Graph from \"../components/Graph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction GetZPercent(z) {\n  // z == number of standard deviations from the mean\n  // if z is greater than 6.5 standard deviations from the mean the\n  // number of significant digits will be outside of a reasonable range\n  if (z < -6.5) {\n    return 0.0;\n  }\n\n  if (z > 6.5) {\n    return 1.0;\n  }\n\n  var factK = 1;\n  var sum = 0;\n  var term = 1;\n  var k = 0;\n  var loopStop = Math.exp(-23);\n\n  while (Math.abs(term) > loopStop) {\n    term = 0.3989422804 * Math.pow(-1, k) * Math.pow(z, k) / (2 * k + 1) / Math.pow(2, k) * Math.pow(z, k + 1) / factK;\n    sum += term;\n    k++;\n    factK *= k;\n  }\n\n  sum += 0.5;\n  return sum;\n}\n\n_c = GetZPercent;\n\nfunction Game() {\n  _s();\n\n  const [score, setScore] = useState(100);\n  const [kellyScore, setKellyScore] = useState(100);\n  const [text, setText] = useState(\"\");\n  const [lowerB, setLowerB] = useState(0);\n  const [upperB, setUpperB] = useState(0);\n  const [questionBounds, setQuestionBounds] = useState(0);\n  const [questionType, setQuestionType] = useState(() => {\n    let qT = getRandomInt(0, 3);\n\n    if (qT === 0) {\n      let lowQB = getRandomInt(1, 101);\n      let upQB = getRandomInt(1, 101);\n      setQuestionBounds([Math.min(lowQB, upQB), Math.max(lowQB, upQB)]);\n      let lowB = getRandomInt(lowQB, upQB + 1);\n      let upB = getRandomInt(lowQB, upQB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    } else if (qT === 1) {\n      let QB = getRandomInt(1, 3);\n      setQuestionBounds(QB);\n      let lowB = getRandomInt(QB, 6 * QB + 1);\n      let upB = getRandomInt(QB, 6 * QB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    } else {\n      let QB = getRandomInt(1, 3);\n      setQuestionBounds(QB);\n      let lowB = getRandomInt(0, QB + 1);\n      let upB = getRandomInt(0, QB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    }\n\n    return qT;\n  });\n  const {\n    difficulty,\n    time\n  } = useParams();\n  const [wO, setWO] = useState(() => {\n    return 5 * getRandomInt(19, 31);\n  });\n  const [lO, setLO] = useState(() => {\n    if (difficulty === \"casual\") {\n      return 100;\n    } else {\n      return 5 * getRandomInt(16, 21);\n    }\n  });\n  const [round, setRound] = useState(1);\n  const [timer, setTimer] = useState(time);\n  const [scoreHistory, setScoreHistory] = useState([[0, 100]]);\n  const [kellyScoreHistory, setKellyScoreHistory] = useState([[0, 100]]);\n  const [answer, setAnswer] = useState(0);\n  const [delta, setDelta] = useState(0);\n  const [kellyDelta, setKellyDelta] = useState(0);\n  let DCDF = [[0, 0.167, 0.333, 0.5, 0.667, 0.833, 1], [0, 0, 0.0278, 0.0833, 0.167, 0.2778, 0.4167, 0.583, 0.722, 0.833, 0.917, 0.972, 1], [0, 0, 0, 0.00463, 0.0185, 0.0463, 0.0926, 0.162, 0.259, 0.375, 0.5, 0.625, 0.741, 0.838, 0.907, 0.954, 0.981, 0.995, 1], [0, 0, 0, 0, 1 / 1296, 5 / 1296, 15 / 1296, 35 / 1296, 70 / 1296, 126 / 1296, 206 / 1296, 310 / 1296, 435 / 1296, 575 / 1296, 721 / 1296, 861 / 1296, 986 / 1296, 1090 / 1296, 1170 / 1296, 1226 / 1296, 1261 / 1296, 1281 / 1296, 1291 / 1296, 1295 / 1296, 1], [0, 0, 0, 0, 0, 1 / 7776, 6 / 7776, 21 / 7776, 56 / 7776, 126 / 7776, 252 / 7776, 457 / 7776, 762 / 7776, 1182 / 7776, 1722 / 7776, 2373 / 7776, 3108 / 7776, 3888 / 7776, 4668 / 7776, 5403 / 7776, 6054 / 7776, 6594 / 7776, 7014 / 7776, 7319 / 7776, 7524 / 7776, 7650 / 7776, 7720 / 7776, 7755 / 7776, 7770 / 7776, 7775 / 7776, 1]];\n  let CCDF = [[0, 0.5, 1], [0, 0.25, 0.75, 1], [0, 0.125, 0.5, 0.875, 1], [0, 0.0625, 0.3125, 0.6875, 0.9375, 1], [0, 0.03125, 0.1875, 0.5, 0.8125, 0.96875, 1]];\n  let roundInterval;\n  useEffect(() => {\n    roundInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      }\n\n      if (timer === 0) {\n        console.log(\"handle1\");\n        console.log(timer);\n        handleRound(0);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(roundInterval);\n    };\n  }, [timer]);\n\n  const redistributeWealth = wager => {\n    let nAnswer = 0;\n    let p = 0;\n\n    if (questionType === 0) {\n      p = (upperB - lowerB + 1) / (questionBounds[1] - questionBounds[0] + 1);\n      nAnswer = getRandomInt(questionBounds[0], questionBounds[1] + 1);\n    } else if (questionType === 1) {\n      if (questionBounds <= 5) {\n        p = DCDF[questionBounds - 1][upperB] - DCDF[questionBounds - 1][lowerB - 1];\n      } else {\n        p = GetZPercent((upperB - 3.5 * questionBounds) / Math.sqrt(35 / 12 * questionBounds)) - GetZPercent((lowerB - 3.5 * questionBounds) / Math.sqrt(35 / 12 * questionBounds));\n      }\n\n      for (var i = 0; i < questionBounds; i++) {\n        nAnswer += getRandomInt(1, 7);\n      }\n    } else {\n      if (questionBounds <= 5) {\n        p = CCDF[questionBounds - 1][upperB + 1] - CCDF[questionBounds - 1][lowerB];\n      } else {\n        p = GetZPercent((upperB - 0.5 * questionBounds) / Math.sqrt(0.5 * 0.5 * questionBounds)) - GetZPercent((lowerB - 0.5 * questionBounds) / Math.sqrt(0.5 * 0.5 * questionBounds));\n\n        for (var i = 0; i < questionBounds; i++) {\n          nAnswer += getRandomInt(0, 2);\n        }\n      }\n    }\n\n    setAnswer(nAnswer);\n    let kellyWager = Math.max(0, Math.round((p / (lO / 100) - (1 - p) / (wO / 100)) * kellyScore));\n    console.log(p, lO, kellyScore, kellyWager);\n\n    if (nAnswer >= lowerB && nAnswer <= upperB) {\n      setKellyDelta(kellyWager);\n      setKellyScore(() => {\n        setKellyScoreHistory([...kellyScoreHistory, [round, kellyScore + kellyWager]]);\n        return kellyScore + kellyWager;\n      });\n      setDelta(wager);\n      setScore(() => {\n        setScoreHistory([...scoreHistory, [round, score + wager]]);\n        return score + wager;\n      });\n    } else {\n      setKellyDelta(-1 * kellyWager);\n      setKellyScore(() => {\n        setKellyScoreHistory([...kellyScoreHistory, [round, kellyScore - kellyWager]]);\n        return kellyScore - kellyWager;\n      });\n      setDelta(-1 * wager);\n      setScore(() => {\n        setScoreHistory([...scoreHistory, [round, score - wager]]);\n        return score - wager;\n      });\n    }\n  };\n\n  const handleRound = wager => {\n    if (round <= Math.floor(300 / time)) {\n      setTimer(time);\n      redistributeWealth(wager);\n      console.log(kellyScore);\n      setRound(round + 1);\n      let qT = getRandomInt(0, 3);\n\n      if (qT === 0) {\n        let lowQB = getRandomInt(1, 101);\n        let upQB = getRandomInt(1, 101);\n        let lowB = getRandomInt(lowQB, upQB + 1);\n        let upB = getRandomInt(lowQB, upQB + 1);\n        setQuestionBounds([Math.min(lowQB, upQB), Math.max(lowQB, upQB)]);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      } else if (qT === 1) {\n        let QB = getRandomInt(1, 3);\n        let lowB = getRandomInt(QB, 6 * QB + 1);\n        let upB = getRandomInt(QB, 6 * QB + 1);\n        setQuestionBounds(QB);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      } else {\n        let QB = getRandomInt(1, 3);\n        let lowB = getRandomInt(0, QB + 1);\n        let upB = getRandomInt(0, QB + 1);\n        setQuestionBounds(QB);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      }\n\n      setQuestionType(qT);\n      let wOP = getRandomInt(19, 31);\n      let lOP = getRandomInt(16, 21);\n      setWO(5 * wOP);\n      setLO(() => {\n        if (difficulty === \"casual\") {\n          return 100;\n        } else {\n          return 5 * lOP;\n        }\n      });\n      setText(\"\");\n      console.log(\"next round\");\n    } else {\n      setTimer(-1);\n    }\n  };\n\n  const ensureValidInput = e => {\n    const re = /^[0-9]+$/;\n\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setText(e.target.value);\n    }\n  };\n\n  const checkUserInput = e => {\n    if (e.key === \"Enter\" && text >= 0 && text <= score) {\n      handleRound(text);\n      console.log(\"handle2\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [(() => {\n      if (round <= Math.floor(300 / time)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.remaining,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.round,\n            children: [\"Round: \", round]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.timer,\n            children: [\"Time: \", timer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.remaining,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this);\n    })(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.question,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.questionType,\n        children: (() => {\n          if (questionType === 0) {\n            return \"Uniform Random Variable between \" + questionBounds[0] + \" and \" + questionBounds[1];\n          } else if (questionType === 1) {\n            return \"Rolling \" + questionBounds + (questionBounds === 1 ? \" die\" : \" dice\");\n          } else {\n            return \"Flipping \" + questionBounds + (questionBounds === 1 ? \" quarter\" : \" quarters\");\n          }\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.odds,\n        children: [\"W/L Odds: \", wO, \"%, \", lO, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.questionText,\n        children: (() => {\n          if (questionType === 0) {\n            return \"Landing between \" + lowerB + \" and \" + upperB + \" inclusive\";\n          } else if (questionType === 1) {\n            return (questionBounds === 1 ? \"Value between \" : \"Sum of values between \") + lowerB + \" and \" + upperB + \" inclusive\";\n          } else {\n            return \"Landing between \" + lowerB + \" and \" + upperB + \" heads\";\n          }\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.delta,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"+0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Landed Value: \", answer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: kellyDelta >= 0 ? \"+\" + kellyDelta : kellyDelta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.terminal,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.score,\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onKeyDown: checkUserInput,\n        onChange: ensureValidInput,\n        placeholder: \"Bet amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.score,\n        children: kellyScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.results,\n      children: /*#__PURE__*/_jsxDEV(Graph, {\n        history: scoreHistory,\n        kellyHistory: kellyScoreHistory\n      }, round, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"F3I093zYxvy4iuLJIcMalwzi5GE=\", false, function () {\n  return [useParams];\n});\n\n_c2 = Game;\nexport default Game;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetZPercent\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"sources":["/Users/samerkadih/Desktop/Coding/Personal/React/kelly-criterion/src/pages/Game.js"],"names":["useState","useEffect","useParams","classes","Graph","getRandomInt","min","max","Math","ceil","floor","random","GetZPercent","z","factK","sum","term","k","loopStop","exp","abs","pow","Game","score","setScore","kellyScore","setKellyScore","text","setText","lowerB","setLowerB","upperB","setUpperB","questionBounds","setQuestionBounds","questionType","setQuestionType","qT","lowQB","upQB","lowB","upB","QB","difficulty","time","wO","setWO","lO","setLO","round","setRound","timer","setTimer","scoreHistory","setScoreHistory","kellyScoreHistory","setKellyScoreHistory","answer","setAnswer","delta","setDelta","kellyDelta","setKellyDelta","DCDF","CCDF","roundInterval","setInterval","console","log","handleRound","clearInterval","redistributeWealth","wager","nAnswer","p","sqrt","i","kellyWager","wOP","lOP","ensureValidInput","e","re","target","value","test","checkUserInput","key","remaining","question","odds","questionText","terminal","results"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Game.module.css\";\nimport Graph from \"../components/Graph\";\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction GetZPercent(z) {\n  // z == number of standard deviations from the mean\n\n  // if z is greater than 6.5 standard deviations from the mean the\n  // number of significant digits will be outside of a reasonable range\n\n  if (z < -6.5) {\n    return 0.0;\n  }\n\n  if (z > 6.5) {\n    return 1.0;\n  }\n\n  var factK = 1;\n  var sum = 0;\n  var term = 1;\n  var k = 0;\n  var loopStop = Math.exp(-23);\n\n  while (Math.abs(term) > loopStop) {\n    term =\n      (((0.3989422804 * Math.pow(-1, k) * Math.pow(z, k)) /\n        (2 * k + 1) /\n        Math.pow(2, k)) *\n        Math.pow(z, k + 1)) /\n      factK;\n    sum += term;\n    k++;\n    factK *= k;\n  }\n\n  sum += 0.5;\n\n  return sum;\n}\n\nfunction Game() {\n  const [score, setScore] = useState(100);\n  const [kellyScore, setKellyScore] = useState(100);\n  const [text, setText] = useState(\"\");\n\n  const [lowerB, setLowerB] = useState(0);\n  const [upperB, setUpperB] = useState(0);\n  const [questionBounds, setQuestionBounds] = useState(0);\n  const [questionType, setQuestionType] = useState(() => {\n    let qT = getRandomInt(0, 3);\n    if (qT === 0) {\n      let lowQB = getRandomInt(1, 101);\n      let upQB = getRandomInt(1, 101);\n      setQuestionBounds([Math.min(lowQB, upQB), Math.max(lowQB, upQB)]);\n      let lowB = getRandomInt(lowQB, upQB + 1);\n      let upB = getRandomInt(lowQB, upQB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    } else if (qT === 1) {\n      let QB = getRandomInt(1, 3);\n      setQuestionBounds(QB);\n      let lowB = getRandomInt(QB, 6 * QB + 1);\n      let upB = getRandomInt(QB, 6 * QB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    } else {\n      let QB = getRandomInt(1, 3);\n      setQuestionBounds(QB);\n      let lowB = getRandomInt(0, QB + 1);\n      let upB = getRandomInt(0, QB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    }\n    return qT;\n  });\n\n  const { difficulty, time } = useParams();\n\n  const [wO, setWO] = useState(() => {\n    return 5 * getRandomInt(19, 31);\n  });\n  const [lO, setLO] = useState(() => {\n    if (difficulty === \"casual\") {\n      return 100;\n    } else {\n      return 5 * getRandomInt(16, 21);\n    }\n  });\n\n  const [round, setRound] = useState(1);\n  const [timer, setTimer] = useState(time);\n  const [scoreHistory, setScoreHistory] = useState([[0, 100]]);\n  const [kellyScoreHistory, setKellyScoreHistory] = useState([[0, 100]]);\n\n  const [answer, setAnswer] = useState(0);\n  const [delta, setDelta] = useState(0);\n  const [kellyDelta, setKellyDelta] = useState(0);\n\n  let DCDF = [\n    [0, 0.167, 0.333, 0.5, 0.667, 0.833, 1],\n    [\n      0, 0, 0.0278, 0.0833, 0.167, 0.2778, 0.4167, 0.583, 0.722, 0.833, 0.917,\n      0.972, 1,\n    ],\n    [\n      0, 0, 0, 0.00463, 0.0185, 0.0463, 0.0926, 0.162, 0.259, 0.375, 0.5, 0.625,\n      0.741, 0.838, 0.907, 0.954, 0.981, 0.995, 1,\n    ],\n    [\n      0,\n      0,\n      0,\n      0,\n      1 / 1296,\n      5 / 1296,\n      15 / 1296,\n      35 / 1296,\n      70 / 1296,\n      126 / 1296,\n      206 / 1296,\n      310 / 1296,\n      435 / 1296,\n      575 / 1296,\n      721 / 1296,\n      861 / 1296,\n      986 / 1296,\n      1090 / 1296,\n      1170 / 1296,\n      1226 / 1296,\n      1261 / 1296,\n      1281 / 1296,\n      1291 / 1296,\n      1295 / 1296,\n      1,\n    ],\n    [\n      0,\n      0,\n      0,\n      0,\n      0,\n      1 / 7776,\n      6 / 7776,\n      21 / 7776,\n      56 / 7776,\n      126 / 7776,\n      252 / 7776,\n      457 / 7776,\n      762 / 7776,\n      1182 / 7776,\n      1722 / 7776,\n      2373 / 7776,\n      3108 / 7776,\n      3888 / 7776,\n      4668 / 7776,\n      5403 / 7776,\n      6054 / 7776,\n      6594 / 7776,\n      7014 / 7776,\n      7319 / 7776,\n      7524 / 7776,\n      7650 / 7776,\n      7720 / 7776,\n      7755 / 7776,\n      7770 / 7776,\n      7775 / 7776,\n      1,\n    ],\n  ];\n  let CCDF = [\n    [0, 0.5, 1],\n    [0, 0.25, 0.75, 1],\n    [0, 0.125, 0.5, 0.875, 1],\n    [0, 0.0625, 0.3125, 0.6875, 0.9375, 1],\n    [0, 0.03125, 0.1875, 0.5, 0.8125, 0.96875, 1],\n  ];\n\n  let roundInterval;\n  useEffect(() => {\n    roundInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      }\n      if (timer === 0) {\n        console.log(\"handle1\");\n        console.log(timer);\n        handleRound(0);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(roundInterval);\n    };\n  }, [timer]);\n\n  const redistributeWealth = (wager) => {\n    let nAnswer = 0;\n    let p = 0;\n    if (questionType === 0) {\n      p = (upperB - lowerB + 1) / (questionBounds[1] - questionBounds[0] + 1);\n      nAnswer = getRandomInt(questionBounds[0], questionBounds[1] + 1);\n    } else if (questionType === 1) {\n      if (questionBounds <= 5) {\n        p =\n          DCDF[questionBounds - 1][upperB] -\n          DCDF[questionBounds - 1][lowerB - 1];\n      } else {\n        p =\n          GetZPercent(\n            (upperB - 3.5 * questionBounds) /\n              Math.sqrt((35 / 12) * questionBounds)\n          ) -\n          GetZPercent(\n            (lowerB - 3.5 * questionBounds) /\n              Math.sqrt((35 / 12) * questionBounds)\n          );\n      }\n      for (var i = 0; i < questionBounds; i++) {\n        nAnswer += getRandomInt(1, 7);\n      }\n    } else {\n      if (questionBounds <= 5) {\n        p =\n          CCDF[questionBounds - 1][upperB + 1] -\n          CCDF[questionBounds - 1][lowerB];\n      } else {\n        p =\n          GetZPercent(\n            (upperB - 0.5 * questionBounds) /\n              Math.sqrt(0.5 * 0.5 * questionBounds)\n          ) -\n          GetZPercent(\n            (lowerB - 0.5 * questionBounds) /\n              Math.sqrt(0.5 * 0.5 * questionBounds)\n          );\n        for (var i = 0; i < questionBounds; i++) {\n          nAnswer += getRandomInt(0, 2);\n        }\n      }\n    }\n    setAnswer(nAnswer);\n    let kellyWager = Math.max(\n      0,\n      Math.round((p / (lO / 100) - (1 - p) / (wO / 100)) * kellyScore)\n    );\n    console.log(p, lO, kellyScore, kellyWager);\n    if (nAnswer >= lowerB && nAnswer <= upperB) {\n      setKellyDelta(kellyWager);\n      setKellyScore(() => {\n        setKellyScoreHistory([\n          ...kellyScoreHistory,\n          [round, kellyScore + kellyWager],\n        ]);\n        return kellyScore + kellyWager;\n      });\n      setDelta(wager);\n      setScore(() => {\n        setScoreHistory([...scoreHistory, [round, score + wager]]);\n        return score + wager;\n      });\n    } else {\n      setKellyDelta(-1 * kellyWager);\n      setKellyScore(() => {\n        setKellyScoreHistory([\n          ...kellyScoreHistory,\n          [round, kellyScore - kellyWager],\n        ]);\n        return kellyScore - kellyWager;\n      });\n      setDelta(-1 * wager);\n      setScore(() => {\n        setScoreHistory([...scoreHistory, [round, score - wager]]);\n        return score - wager;\n      });\n    }\n  };\n  const handleRound = (wager) => {\n    if (round <= Math.floor(300 / time)) {\n      setTimer(time);\n      redistributeWealth(wager);\n      console.log(kellyScore);\n      setRound(round + 1);\n      let qT = getRandomInt(0, 3);\n      if (qT === 0) {\n        let lowQB = getRandomInt(1, 101);\n        let upQB = getRandomInt(1, 101);\n        let lowB = getRandomInt(lowQB, upQB + 1);\n        let upB = getRandomInt(lowQB, upQB + 1);\n        setQuestionBounds([Math.min(lowQB, upQB), Math.max(lowQB, upQB)]);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      } else if (qT === 1) {\n        let QB = getRandomInt(1, 3);\n        let lowB = getRandomInt(QB, 6 * QB + 1);\n        let upB = getRandomInt(QB, 6 * QB + 1);\n        setQuestionBounds(QB);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      } else {\n        let QB = getRandomInt(1, 3);\n        let lowB = getRandomInt(0, QB + 1);\n        let upB = getRandomInt(0, QB + 1);\n        setQuestionBounds(QB);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      }\n      setQuestionType(qT);\n      let wOP = getRandomInt(19, 31);\n      let lOP = getRandomInt(16, 21);\n      setWO(5 * wOP);\n      setLO(() => {\n        if (difficulty === \"casual\") {\n          return 100;\n        } else {\n          return 5 * lOP;\n        }\n      });\n      setText(\"\");\n      console.log(\"next round\");\n    } else {\n      setTimer(-1);\n    }\n  };\n\n  const ensureValidInput = (e) => {\n    const re = /^[0-9]+$/;\n\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setText(e.target.value);\n    }\n  };\n\n  const checkUserInput = (e) => {\n    if (e.key === \"Enter\" && text >= 0 && text <= score) {\n      handleRound(text);\n      console.log(\"handle2\");\n    }\n  };\n\n  return (\n    <div>\n      {(() => {\n        if (round <= Math.floor(300 / time)) {\n          return (\n            <div className={classes.remaining}>\n              <div className={classes.round}>Round: {round}</div>\n              <div className={classes.timer}>Time: {timer}</div>\n            </div>\n          );\n        }\n        return (\n          <div className={classes.remaining}>\n            <div>Game Over</div>\n          </div>\n        );\n      })()}\n      <div className={classes.question}>\n        <div className={classes.questionType}>\n          {(() => {\n            if (questionType === 0) {\n              return (\n                \"Uniform Random Variable between \" +\n                questionBounds[0] +\n                \" and \" +\n                questionBounds[1]\n              );\n            } else if (questionType === 1) {\n              return (\n                \"Rolling \" +\n                questionBounds +\n                (questionBounds === 1 ? \" die\" : \" dice\")\n              );\n            } else {\n              return (\n                \"Flipping \" +\n                questionBounds +\n                (questionBounds === 1 ? \" quarter\" : \" quarters\")\n              );\n            }\n          })()}\n        </div>\n        <div className={classes.odds}>\n          W/L Odds: {wO}%, {lO}%\n        </div>\n        <div className={classes.questionText}>\n          {(() => {\n            if (questionType === 0) {\n              return (\n                \"Landing between \" + lowerB + \" and \" + upperB + \" inclusive\"\n              );\n            } else if (questionType === 1) {\n              return (\n                (questionBounds === 1\n                  ? \"Value between \"\n                  : \"Sum of values between \") +\n                lowerB +\n                \" and \" +\n                upperB +\n                \" inclusive\"\n              );\n            } else {\n              return \"Landing between \" + lowerB + \" and \" + upperB + \" heads\";\n            }\n          })()}\n        </div>\n        <div className={classes.delta}>\n          <div>+0</div>\n          <div>Landed Value: {answer}</div>\n          <div>{kellyDelta >= 0 ? \"+\" + kellyDelta : kellyDelta}</div>\n        </div>\n      </div>\n      <div className={classes.terminal}>\n        <div className={classes.score}>{score}</div>\n        <input\n          value={text}\n          onKeyDown={checkUserInput}\n          onChange={ensureValidInput}\n          placeholder=\"Bet amount\"\n        />\n        <div className={classes.score}>{kellyScore}</div>\n      </div>\n\n      <div className={classes.results}>\n        <Graph\n          key={round}\n          history={scoreHistory}\n          kellyHistory={kellyScoreHistory}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}