{"ast":null,"code":"var _jsxFileName = \"/Users/samerkadih/Desktop/Coding/Personal/React/kelly-criterion/src/pages/Game.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Strategy from \"../components/Strategy\";\nimport classes from \"./Game.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const [score, setScore] = useState(100);\n  const [kellyScore, setKellyScore] = useState(100);\n  const [text, setText] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(69);\n  const {\n    difficulty,\n    time\n  } = useParams();\n  const [round, setRound] = useState(1);\n  const [timer, setTimer] = useState(time);\n  let roundInterval;\n  useEffect(() => {\n    roundInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      }\n\n      if (timer === 0) {\n        handleRound();\n      }\n    }, 1000);\n    return () => {\n      clearInterval(roundInterval);\n    };\n  }, [timer]);\n\n  const handleRound = () => {\n    if (round <= Math.floor(300 / time)) {\n      setTimer(time);\n      setRound(round + 1);\n      setText('');\n      console.log(\"next round\");\n    }\n  };\n\n  const ensureValidInput = e => {\n    const re = /^[0-9]+$/;\n\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setText(e.target.value);\n    }\n  };\n\n  const checkUserInput = e => {\n    if (e.key === \"Enter\") {\n      handleRound();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [(() => {\n      if (round <= Math.floor(300 / time)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.remaining,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.round,\n            children: [\"Round: \", round]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.timer,\n            children: [\"Time: \", timer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.remaining,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this);\n    })(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.question,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.questionType,\n        children: \"Uniform Random Variable [1, 100]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.odds,\n        children: \"W/L Odds: 20%, 100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.questionText,\n        children: \"This is the question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.terminal,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.score,\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onKeyDown: checkUserInput,\n        onChange: ensureValidInput,\n        placeholder: \"Bet amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.score,\n        children: kellyScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.results,\n      children: /*#__PURE__*/_jsxDEV(Strategy, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"++BEP7Yun0QRZ3SvVqMN8v5zijo=\", false, function () {\n  return [useParams];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/samerkadih/Desktop/Coding/Personal/React/kelly-criterion/src/pages/Game.js"],"names":["useState","useEffect","useParams","Strategy","classes","Game","score","setScore","kellyScore","setKellyScore","text","setText","question","setQuestion","answer","setAnswer","difficulty","time","round","setRound","timer","setTimer","roundInterval","setInterval","handleRound","clearInterval","Math","floor","console","log","ensureValidInput","e","re","target","value","test","checkUserInput","key","remaining","questionType","odds","questionText","terminal","results"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAEgB,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAuBf,SAAS,EAAtC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACiB,IAAD,CAAlC;AAEA,MAAIK,aAAJ;AACArB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,aAAa,GAAGC,WAAW,CAAC,MAAM;AAChC,UAAIH,KAAK,GAAG,CAAZ,EAAe;AACbC,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AACD,UAAIA,KAAK,KAAK,CAAd,EAAiB;AACfI,QAAAA,WAAW;AACZ;AACF,KAP0B,EAOxB,IAPwB,CAA3B;AAQA,WAAO,MAAM;AACXC,MAAAA,aAAa,CAACH,aAAD,CAAb;AACD,KAFD;AAGD,GAZQ,EAYN,CAACF,KAAD,CAZM,CAAT;;AAcA,QAAMI,WAAW,GAAG,MAAM;AACxB,QAAIN,KAAK,IAAIQ,IAAI,CAACC,KAAL,CAAW,MAAMV,IAAjB,CAAb,EAAqC;AACnCI,MAAAA,QAAQ,CAACJ,IAAD,CAAR;AACAE,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAP,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF,GAPD;;AASA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9B,UAAMC,EAAE,GAAG,UAAX;;AAEA,QAAID,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB,EAAnB,IAAyBF,EAAE,CAACG,IAAH,CAAQJ,CAAC,CAACE,MAAF,CAASC,KAAjB,CAA7B,EAAsD;AACpDvB,MAAAA,OAAO,CAACoB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AACD;AACF,GAND;;AAQA,QAAME,cAAc,GAAIL,CAAD,IAAO;AAC5B,QAAIA,CAAC,CAACM,GAAF,KAAU,OAAd,EAAuB;AACrBb,MAAAA,WAAW;AACZ;AACF,GAJD;;AAMA,sBACE;AAAA,eACG,CAAC,MAAM;AACN,UAAIN,KAAK,IAAIQ,IAAI,CAACC,KAAL,CAAW,MAAMV,IAAjB,CAAb,EAAqC;AACnC,4BACE;AAAK,UAAA,SAAS,EAAEb,OAAO,CAACkC,SAAxB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAElC,OAAO,CAACc,KAAxB;AAAA,kCAAuCA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAEd,OAAO,CAACgB,KAAxB;AAAA,iCAAsCA,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;;AACD,0BACE;AAAK,QAAA,SAAS,EAAEhB,OAAO,CAACkC,SAAxB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAdA,GADH,eAgBE;AAAK,MAAA,SAAS,EAAElC,OAAO,CAACQ,QAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAER,OAAO,CAACmC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAEnC,OAAO,CAACoC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAEpC,OAAO,CAACqC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eAuBE;AAAK,MAAA,SAAS,EAAErC,OAAO,CAACsC,QAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEtC,OAAO,CAACE,KAAxB;AAAA,kBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAEI,IADT;AAEE,QAAA,SAAS,EAAE0B,cAFb;AAGE,QAAA,QAAQ,EAAEN,gBAHZ;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAK,QAAA,SAAS,EAAE1B,OAAO,CAACE,KAAxB;AAAA,kBAAgCE;AAAhC;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF,eAkCE;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACuC,OAAxB;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GAxFQtC,I;UAMsBH,S;;;KANtBG,I;AA0FT,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Strategy from \"../components/Strategy\";\nimport classes from \"./Game.module.css\";\n\nfunction Game() {\n  const [score, setScore] = useState(100);\n  const [kellyScore, setKellyScore] = useState(100);\n  const [text, setText] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(69);\n  const { difficulty, time } = useParams();\n  const [round, setRound] = useState(1);\n  const [timer, setTimer] = useState(time);\n\n  let roundInterval;\n  useEffect(() => {\n    roundInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      }\n      if (timer === 0) {\n        handleRound();\n      }\n    }, 1000);\n    return () => {\n      clearInterval(roundInterval);\n    };\n  }, [timer]);\n\n  const handleRound = () => {\n    if (round <= Math.floor(300 / time)) {\n      setTimer(time);\n      setRound(round + 1);\n      setText('');\n      console.log(\"next round\");\n    }\n  };\n\n  const ensureValidInput = (e) => {\n    const re = /^[0-9]+$/;\n\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setText(e.target.value);\n    }\n  };\n\n  const checkUserInput = (e) => {\n    if (e.key === \"Enter\") {\n      handleRound();\n    }\n  };\n\n  return (\n    <div>\n      {(() => {\n        if (round <= Math.floor(300 / time)) {\n          return (\n            <div className={classes.remaining}>\n              <div className={classes.round}>Round: {round}</div>\n              <div className={classes.timer}>Time: {timer}</div>\n            </div>\n          );\n        }\n        return (\n          <div className={classes.remaining}>\n            <div>Game Over</div>\n          </div>\n        );\n      })()}\n      <div className={classes.question}>\n        <div className={classes.questionType}>\n          Uniform Random Variable [1, 100]\n        </div>\n        <div className={classes.odds}>W/L Odds: 20%, 100%</div>\n        <div className={classes.questionText}>This is the question</div>\n      </div>\n      <div className={classes.terminal}>\n        <div className={classes.score}>{score}</div>\n        <input\n          value={text}\n          onKeyDown={checkUserInput}\n          onChange={ensureValidInput}\n          placeholder=\"Bet amount\"\n        />\n        <div className={classes.score}>{kellyScore}</div>\n      </div>\n\n      <div className={classes.results}>\n        <Strategy />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}