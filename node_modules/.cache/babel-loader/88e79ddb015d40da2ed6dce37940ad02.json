{"ast":null,"code":"var _jsxFileName = \"/Users/samerkadih/Desktop/Coding/Personal/React/kelly-criterion/src/pages/Game.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Game.module.css\";\nimport Graph from \"../components/Graph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction GetZPercent(z) {\n  // z == number of standard deviations from the mean\n  // if z is greater than 6.5 standard deviations from the mean the\n  // number of significant digits will be outside of a reasonable range\n  if (z < -6.5) {\n    return 0.0;\n  }\n\n  if (z > 6.5) {\n    return 1.0;\n  }\n\n  var factK = 1;\n  var sum = 0;\n  var term = 1;\n  var k = 0;\n  var loopStop = Math.exp(-23);\n\n  while (Math.abs(term) > loopStop) {\n    term = 0.3989422804 * Math.pow(-1, k) * Math.pow(z, k) / (2 * k + 1) / Math.pow(2, k) * Math.pow(z, k + 1) / factK;\n    sum += term;\n    k++;\n    factK *= k;\n  }\n\n  sum += 0.5;\n  return sum;\n}\n\n_c = GetZPercent;\n\nfunction Game() {\n  _s();\n\n  const [score, setScore] = useState(100);\n  const [kellyScore, setKellyScore] = useState(100);\n  const [text, setText] = useState(\"\");\n  const [lowerB, setLowerB] = useState(0);\n  const [upperB, setUpperB] = useState(0);\n  const [questionBounds, setQuestionBounds] = useState(0);\n  const [questionType, setQuestionType] = useState(() => {\n    let qT = getRandomInt(0, 3);\n\n    if (qT === 0) {\n      let lowQB = getRandomInt(1, 101);\n      let upQB = getRandomInt(1, 101);\n      setQuestionBounds([Math.min(lowQB, upQB), Math.max(lowQB, upQB)]);\n      let lowB = getRandomInt(lowQB, upQB + 1);\n      let upB = getRandomInt(lowQB, upQB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    } else if (qT === 1) {\n      let QB = getRandomInt(1, 3);\n      setQuestionBounds(QB);\n      let lowB = getRandomInt(QB, 6 * QB + 1);\n      let upB = getRandomInt(QB, 6 * QB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    } else {\n      let QB = getRandomInt(1, 3);\n      setQuestionBounds(QB);\n      let lowB = getRandomInt(0, QB + 1);\n      let upB = getRandomInt(0, QB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    }\n\n    return qT;\n  });\n  const {\n    difficulty,\n    time\n  } = useParams();\n  const [wO, setWO] = useState(() => {\n    return 5 * getRandomInt(14, 31);\n  });\n  const [lO, setLO] = useState(() => {\n    if (difficulty === \"casual\") {\n      return 100;\n    } else {\n      return 5 * getRandomInt(16, 21);\n    }\n  });\n  const [round, setRound] = useState(1);\n  const [timer, setTimer] = useState(time);\n  const [scoreHistory, setScoreHistory] = useState([[0, 100]]);\n  const [kellyScoreHistory, setKellyScoreHistory] = useState([[0, 100]]);\n  const [answer, setAnswer] = useState(0);\n  const [delta, setDelta] = useState(0);\n  const [kellyDelta, setKellyDelta] = useState(0);\n  let roundInterval;\n  useEffect(() => {\n    roundInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      }\n\n      if (timer === 0) {\n        console.log(\"handle1\");\n        console.log(timer);\n        handleRound();\n      }\n    }, 1000);\n    return () => {\n      clearInterval(roundInterval);\n    };\n  }, [timer]);\n\n  const redistributeWealth = () => {\n    let nAnswer = 0;\n    let p = 0;\n\n    if (questionType === 0) {\n      p = (upperB - lowerB + 1) / (questionBounds[1] - questionBounds[0] + 1);\n      nAnswer = getRandomInt(questionBounds[0], questionBounds[1] + 1);\n    } else if (questionType === 1) {\n      p = GetZPercent((upperB - 3.5 * questionBounds) / Math.sqrt(35 / 12 * questionBounds)) - GetZPercent((lowerB - 3.5 * questionBounds) / Math.sqrt(35 / 12 * questionBounds));\n\n      for (var i = 0; i < questionBounds; i++) {\n        nAnswer += getRandomInt(1, 7);\n      }\n    } else {\n      p = GetZPercent((upperB - 0.5 * questionBounds) / Math.sqrt(0.5 * 0.5 * questionBounds)) - GetZPercent((lowerB - 0.5 * questionBounds) / Math.sqrt(0.5 * 0.5 * questionBounds));\n\n      for (var i = 0; i < questionBounds; i++) {\n        nAnswer += getRandomInt(0, 2);\n      }\n    }\n\n    setAnswer(nAnswer);\n    let kellyWager = Math.max(0, Math.round((p / (lO / 100) - (1 - p) / (wO / 100)) * kellyScore));\n    console.log(p, lO, kellyScore, kellyWager);\n\n    if (nAnswer >= lowerB && nAnswer <= upperB) {\n      setKellyDelta(kellyWager);\n      setKellyScore(kellyScore + kellyWager);\n      console.log(kellyScore + kellyWager);\n    } else {\n      setKellyDelta(-1 * kellyWager);\n      setKellyScore(kellyScore - kellyWager);\n      console.log(kellyScore - kellyWager);\n    }\n  };\n\n  const handleRound = () => {\n    if (round <= Math.floor(300 / time)) {\n      setTimer(time);\n      redistributeWealth();\n      setScoreHistory([...scoreHistory, [round, score]]);\n      console.log(kellyScore);\n      setKellyScoreHistory([...kellyScoreHistory, [round, kellyScore]]);\n      setRound(round + 1);\n      let qT = getRandomInt(0, 3);\n\n      if (qT === 0) {\n        let lowQB = getRandomInt(1, 101);\n        let upQB = getRandomInt(1, 101);\n        let lowB = getRandomInt(lowQB, upQB + 1);\n        let upB = getRandomInt(lowQB, upQB + 1);\n        setQuestionBounds([Math.min(lowQB, upQB), Math.max(lowQB, upQB)]);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      } else if (qT === 1) {\n        let QB = getRandomInt(1, 3);\n        let lowB = getRandomInt(QB, 6 * QB + 1);\n        let upB = getRandomInt(QB, 6 * QB + 1);\n        setQuestionBounds(QB);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      } else {\n        let QB = getRandomInt(1, 3);\n        let lowB = getRandomInt(0, QB + 1);\n        let upB = getRandomInt(0, QB + 1);\n        setQuestionBounds(QB);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      }\n\n      setQuestionType(qT);\n      let wOP = getRandomInt(14, 31);\n      let lOP = getRandomInt(16, 21);\n      setWO(5 * wOP);\n      setLO(() => {\n        if (difficulty === \"casual\") {\n          return 100;\n        } else {\n          return 5 * lOP;\n        }\n      });\n      setText(\"\");\n      console.log(\"next round\");\n    }\n  };\n\n  const ensureValidInput = e => {\n    const re = /^[0-9]+$/;\n\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setText(e.target.value);\n    }\n  };\n\n  const checkUserInput = e => {\n    if (e.key === \"Enter\" && text !== \"\") {\n      handleRound();\n      console.log(\"handle2\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [(() => {\n      if (round <= Math.floor(300 / time)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.remaining,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.round,\n            children: [\"Round: \", round]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.timer,\n            children: [\"Time: \", timer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.remaining,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this);\n    })(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.question,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.questionType,\n        children: (() => {\n          if (questionType === 0) {\n            return \"Uniform Random Variable between \" + questionBounds[0] + \" and \" + questionBounds[1];\n          } else if (questionType === 1) {\n            return \"Rolling \" + questionBounds + (questionBounds === 1 ? \" die\" : \" dice\");\n          } else {\n            return \"Flipping \" + questionBounds + (questionBounds === 1 ? \" quarter\" : \" quarters\");\n          }\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.odds,\n        children: [\"W/L Odds: \", wO, \"%, \", lO, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.questionText,\n        children: (() => {\n          if (questionType === 0) {\n            return \"Landing between \" + lowerB + \" and \" + upperB + \" inclusive\";\n          } else if (questionType === 1) {\n            return (questionBounds === 1 ? \"Value between \" : \"Sum of values between \") + lowerB + \" and \" + upperB + \" inclusive\";\n          } else {\n            return \"Landing between \" + lowerB + \" and \" + upperB + \" heads\";\n          }\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.delta,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"+0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Landed Value: \", answer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: kellyDelta >= 0 ? \"+\" + kellyDelta : kellyDelta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.terminal,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.score,\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onKeyDown: checkUserInput,\n        onChange: ensureValidInput,\n        placeholder: \"Bet amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.score,\n        children: kellyScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.results,\n      children: /*#__PURE__*/_jsxDEV(Graph, {\n        history: scoreHistory,\n        kellyHistory: kellyScoreHistory\n      }, round, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"9f4ALIDcr1kVry7iWS5r4e0uFxc=\", false, function () {\n  return [useParams];\n});\n\n_c2 = Game;\nexport default Game;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetZPercent\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"sources":["/Users/samerkadih/Desktop/Coding/Personal/React/kelly-criterion/src/pages/Game.js"],"names":["useState","useEffect","useParams","classes","Graph","getRandomInt","min","max","Math","ceil","floor","random","GetZPercent","z","factK","sum","term","k","loopStop","exp","abs","pow","Game","score","setScore","kellyScore","setKellyScore","text","setText","lowerB","setLowerB","upperB","setUpperB","questionBounds","setQuestionBounds","questionType","setQuestionType","qT","lowQB","upQB","lowB","upB","QB","difficulty","time","wO","setWO","lO","setLO","round","setRound","timer","setTimer","scoreHistory","setScoreHistory","kellyScoreHistory","setKellyScoreHistory","answer","setAnswer","delta","setDelta","kellyDelta","setKellyDelta","roundInterval","setInterval","console","log","handleRound","clearInterval","redistributeWealth","nAnswer","p","sqrt","i","kellyWager","wOP","lOP","ensureValidInput","e","re","target","value","test","checkUserInput","key","remaining","question","odds","questionText","terminal","results"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Game.module.css\";\nimport Graph from \"../components/Graph\";\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction GetZPercent(z) {\n  // z == number of standard deviations from the mean\n\n  // if z is greater than 6.5 standard deviations from the mean the\n  // number of significant digits will be outside of a reasonable range\n\n  if (z < -6.5) {\n    return 0.0;\n  }\n\n  if (z > 6.5) {\n    return 1.0;\n  }\n\n  var factK = 1;\n  var sum = 0;\n  var term = 1;\n  var k = 0;\n  var loopStop = Math.exp(-23);\n\n  while (Math.abs(term) > loopStop) {\n    term =\n      (((0.3989422804 * Math.pow(-1, k) * Math.pow(z, k)) /\n        (2 * k + 1) /\n        Math.pow(2, k)) *\n        Math.pow(z, k + 1)) /\n      factK;\n    sum += term;\n    k++;\n    factK *= k;\n  }\n\n  sum += 0.5;\n\n  return sum;\n}\n\nfunction Game() {\n  const [score, setScore] = useState(100);\n  const [kellyScore, setKellyScore] = useState(100);\n  const [text, setText] = useState(\"\");\n\n  const [lowerB, setLowerB] = useState(0);\n  const [upperB, setUpperB] = useState(0);\n  const [questionBounds, setQuestionBounds] = useState(0);\n  const [questionType, setQuestionType] = useState(() => {\n    let qT = getRandomInt(0, 3);\n    if (qT === 0) {\n      let lowQB = getRandomInt(1, 101);\n      let upQB = getRandomInt(1, 101);\n      setQuestionBounds([Math.min(lowQB, upQB), Math.max(lowQB, upQB)]);\n      let lowB = getRandomInt(lowQB, upQB + 1);\n      let upB = getRandomInt(lowQB, upQB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    } else if (qT === 1) {\n      let QB = getRandomInt(1, 3);\n      setQuestionBounds(QB);\n      let lowB = getRandomInt(QB, 6 * QB + 1);\n      let upB = getRandomInt(QB, 6 * QB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    } else {\n      let QB = getRandomInt(1, 3);\n      setQuestionBounds(QB);\n      let lowB = getRandomInt(0, QB + 1);\n      let upB = getRandomInt(0, QB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    }\n    return qT;\n  });\n\n  const { difficulty, time } = useParams();\n\n  const [wO, setWO] = useState(() => {\n    return 5 * getRandomInt(14, 31);\n  });\n  const [lO, setLO] = useState(() => {\n    if (difficulty === \"casual\") {\n      return 100;\n    } else {\n      return 5 * getRandomInt(16, 21);\n    }\n  });\n\n  const [round, setRound] = useState(1);\n  const [timer, setTimer] = useState(time);\n  const [scoreHistory, setScoreHistory] = useState([[0, 100]]);\n  const [kellyScoreHistory, setKellyScoreHistory] = useState([[0, 100]]);\n\n  const [answer, setAnswer] = useState(0);\n  const [delta, setDelta] = useState(0);\n  const [kellyDelta, setKellyDelta] = useState(0);\n\n  let roundInterval;\n  useEffect(() => {\n    roundInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      }\n      if (timer === 0) {\n        console.log(\"handle1\");\n        console.log(timer);\n        handleRound();\n      }\n    }, 1000);\n    return () => {\n      clearInterval(roundInterval);\n    };\n  }, [timer]);\n\n  const redistributeWealth = () => {\n    let nAnswer = 0;\n    let p = 0;\n    if (questionType === 0) {\n      p = (upperB - lowerB + 1) / (questionBounds[1] - questionBounds[0] + 1);\n      nAnswer = getRandomInt(questionBounds[0], questionBounds[1] + 1);\n    } else if (questionType === 1) {\n      p =\n        GetZPercent(\n          (upperB - 3.5 * questionBounds) /\n            Math.sqrt((35 / 12) * questionBounds)\n        ) -\n        GetZPercent(\n          (lowerB - 3.5 * questionBounds) /\n            Math.sqrt((35 / 12) * questionBounds)\n        );\n      for (var i = 0; i < questionBounds; i++) {\n        nAnswer += getRandomInt(1, 7);\n      }\n    } else {\n      p =\n        GetZPercent(\n          (upperB - 0.5 * questionBounds) /\n            Math.sqrt(0.5 * 0.5 * questionBounds)\n        ) -\n        GetZPercent(\n          (lowerB - 0.5 * questionBounds) /\n            Math.sqrt(0.5 * 0.5 * questionBounds)\n        );\n      for (var i = 0; i < questionBounds; i++) {\n        nAnswer += getRandomInt(0, 2);\n      }\n    }\n    setAnswer(nAnswer);\n    let kellyWager = Math.max(0, Math.round(\n      (p / (lO / 100) - (1 - p) / (wO / 100)) * kellyScore\n    ));\n    console.log(p, lO, kellyScore, kellyWager);\n    if (nAnswer >= lowerB && nAnswer <= upperB) {\n      setKellyDelta(kellyWager);\n      setKellyScore(kellyScore + kellyWager);\n      console.log(kellyScore + kellyWager);\n    } else {\n      setKellyDelta(-1 * kellyWager);\n      setKellyScore(kellyScore - kellyWager);\n      console.log(kellyScore - kellyWager);\n    }\n  };\n  const handleRound = () => {\n    if (round <= Math.floor(300 / time)) {\n      setTimer(time);\n      redistributeWealth();\n      setScoreHistory([...scoreHistory, [round, score]]);\n      console.log(kellyScore);\n      setKellyScoreHistory([...kellyScoreHistory, [round, kellyScore]]);\n      setRound(round + 1);\n      let qT = getRandomInt(0, 3);\n      if (qT === 0) {\n        let lowQB = getRandomInt(1, 101);\n        let upQB = getRandomInt(1, 101);\n        let lowB = getRandomInt(lowQB, upQB + 1);\n        let upB = getRandomInt(lowQB, upQB + 1);\n        setQuestionBounds([Math.min(lowQB, upQB), Math.max(lowQB, upQB)]);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      } else if (qT === 1) {\n        let QB = getRandomInt(1, 3);\n        let lowB = getRandomInt(QB, 6 * QB + 1);\n        let upB = getRandomInt(QB, 6 * QB + 1);\n        setQuestionBounds(QB);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      } else {\n        let QB = getRandomInt(1, 3);\n        let lowB = getRandomInt(0, QB + 1);\n        let upB = getRandomInt(0, QB + 1);\n        setQuestionBounds(QB);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      }\n      setQuestionType(qT);\n      let wOP = getRandomInt(14, 31);\n      let lOP = getRandomInt(16, 21);\n      setWO(5 * wOP);\n      setLO(() => {\n        if (difficulty === \"casual\") {\n          return 100;\n        } else {\n          return 5 * lOP;\n        }\n      });\n      setText(\"\");\n      console.log(\"next round\");\n    }\n  };\n\n  const ensureValidInput = (e) => {\n    const re = /^[0-9]+$/;\n\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setText(e.target.value);\n    }\n  };\n\n  const checkUserInput = (e) => {\n    if (e.key === \"Enter\" && text !== \"\") {\n      handleRound();\n      console.log(\"handle2\");\n    }\n  };\n\n  return (\n    <div>\n      {(() => {\n        if (round <= Math.floor(300 / time)) {\n          return (\n            <div className={classes.remaining}>\n              <div className={classes.round}>Round: {round}</div>\n              <div className={classes.timer}>Time: {timer}</div>\n            </div>\n          );\n        }\n        return (\n          <div className={classes.remaining}>\n            <div>Game Over</div>\n          </div>\n        );\n      })()}\n      <div className={classes.question}>\n        <div className={classes.questionType}>\n          {(() => {\n            if (questionType === 0) {\n              return (\n                \"Uniform Random Variable between \" +\n                questionBounds[0] +\n                \" and \" +\n                questionBounds[1]\n              );\n            } else if (questionType === 1) {\n              return (\n                \"Rolling \" +\n                questionBounds +\n                (questionBounds === 1 ? \" die\" : \" dice\")\n              );\n            } else {\n              return (\n                \"Flipping \" +\n                questionBounds +\n                (questionBounds === 1 ? \" quarter\" : \" quarters\")\n              );\n            }\n          })()}\n        </div>\n        <div className={classes.odds}>\n          W/L Odds: {wO}%, {lO}%\n        </div>\n        <div className={classes.questionText}>\n          {(() => {\n            if (questionType === 0) {\n              return (\n                \"Landing between \" + lowerB + \" and \" + upperB + \" inclusive\"\n              );\n            } else if (questionType === 1) {\n              return (\n                (questionBounds === 1\n                  ? \"Value between \"\n                  : \"Sum of values between \") +\n                lowerB +\n                \" and \" +\n                upperB +\n                \" inclusive\"\n              );\n            } else {\n              return \"Landing between \" + lowerB + \" and \" + upperB + \" heads\";\n            }\n          })()}\n        </div>\n        <div className={classes.delta}>\n          <div>+0</div>\n          <div>Landed Value: {answer}</div>\n          <div>{kellyDelta >= 0 ? \"+\" + kellyDelta : kellyDelta}</div>\n        </div>\n      </div>\n      <div className={classes.terminal}>\n        <div className={classes.score}>{score}</div>\n        <input\n          value={text}\n          onKeyDown={checkUserInput}\n          onChange={ensureValidInput}\n          placeholder=\"Bet amount\"\n        />\n        <div className={classes.score}>{kellyScore}</div>\n      </div>\n\n      <div className={classes.results}>\n        <Graph\n          key={round}\n          history={scoreHistory}\n          kellyHistory={kellyScoreHistory}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}