{"ast":null,"code":"import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/esm/createForOfIteratorHelperLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"options\", \"className\", \"style\"];\nimport { groups, sort } from 'd3-array';\nimport { stack, stackOffsetNone } from 'd3-shape';\nimport React from 'react';\nimport useGetLatest from '../hooks/useGetLatest';\nimport useIsomorphicLayoutEffect from '../hooks/useIsomorphicLayoutEffect';\nimport Area from '../seriesTypes/Area';\nimport Bar from '../seriesTypes/Bar';\nimport Line from '../seriesTypes/Line'; //\n\nimport { materializeStyles, getSeriesStatus, getDatumStatus } from '../utils/Utils';\nimport buildAxisLinear from '../utils/buildAxis.linear';\nimport { ChartContextProvider } from '../utils/chartContext';\nimport AxisLinear from './AxisLinear'; // import Brush from './Brush'\n\nimport Cursors from './Cursors';\nimport Tooltip from './Tooltip';\nimport Voronoi from './Voronoi'; //\n//\n\nvar defaultColorScheme = ['#0f83ab', '#faa43a', '#ff4e4e', '#53cfc9', '#a2d925', '#decf3f', '#734fe9', '#cd82ad', '#006d92', '#de7c00', '#f33232', '#3f9a80', '#53c200', '#d7af00', '#4c26c9', '#d44d99'];\n\nfunction defaultChartOptions(options) {\n  var _options$initialWidth, _options$initialHeigh, _options$getSeriesOrd, _options$groupingMode, _options$showVoronoi, _options$defaultColor, _options$useIntersect, _options$intersection, _options$tooltip, _options$primaryCurso, _options$secondaryCur;\n\n  return _extends({}, options, {\n    initialWidth: (_options$initialWidth = options.initialWidth) != null ? _options$initialWidth : 300,\n    initialHeight: (_options$initialHeigh = options.initialHeight) != null ? _options$initialHeigh : 200,\n    getSeriesOrder: (_options$getSeriesOrd = options.getSeriesOrder) != null ? _options$getSeriesOrd : function (series) {\n      return series;\n    },\n    groupingMode: (_options$groupingMode = options.groupingMode) != null ? _options$groupingMode : 'primary',\n    showVoronoi: (_options$showVoronoi = options.showVoronoi) != null ? _options$showVoronoi : false,\n    defaultColors: (_options$defaultColor = options.defaultColors) != null ? _options$defaultColor : defaultColorScheme,\n    useIntersectionObserver: (_options$useIntersect = options.useIntersectionObserver) != null ? _options$useIntersect : true,\n    intersectionObserverRootMargin: (_options$intersection = options.intersectionObserverRootMargin) != null ? _options$intersection : '1000px',\n    tooltip: (_options$tooltip = options.tooltip) != null ? _options$tooltip : true,\n    primaryCursor: (_options$primaryCurso = options.primaryCursor) != null ? _options$primaryCurso : true,\n    secondaryCursor: (_options$secondaryCur = options.secondaryCursor) != null ? _options$secondaryCur : true\n  });\n}\n\nexport function Chart(_ref) {\n  var userOptions = _ref.options,\n      className = _ref.className,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var options = defaultChartOptions(userOptions);\n\n  var _React$useState = React.useState(null),\n      chartElement = _React$useState[0],\n      setContainerElement = _React$useState[1];\n\n  var containerEl = chartElement == null ? void 0 : chartElement.parentElement;\n  var nearestScrollableParent = React.useMemo(function () {\n    var run = function run(el) {\n      if (!el) {\n        return null;\n      }\n\n      var grandParent = el.parentElement;\n\n      if (!grandParent) {\n        return null;\n      }\n\n      if (grandParent.scrollHeight > grandParent.clientHeight) {\n        var _window$getComputedSt = window.getComputedStyle(grandParent),\n            overflow = _window$getComputedSt.overflow;\n\n        if (overflow.includes('scroll') || overflow.includes('auto')) {\n          return grandParent;\n        }\n      }\n\n      return run(grandParent);\n    };\n\n    return run(containerEl);\n  }, [containerEl]);\n\n  var _React$useState2 = React.useState({\n    width: options.initialWidth,\n    height: options.initialHeight\n  }),\n      _React$useState2$ = _React$useState2[0],\n      width = _React$useState2$.width,\n      height = _React$useState2$.height,\n      setDims = _React$useState2[1];\n\n  useIsomorphicLayoutEffect(function () {\n    if (containerEl) {\n      var computed = window.getComputedStyle(containerEl);\n\n      if (!['relative', 'absolute', 'fixed'].includes(computed.position)) {\n        containerEl.style.position = 'relative';\n      }\n    }\n  }, [containerEl]);\n  React.useEffect(function () {\n    if (!containerEl) {\n      return;\n    }\n\n    var observer = new ResizeObserver(function () {\n      var rect = containerEl == null ? void 0 : containerEl.getBoundingClientRect();\n\n      if (rect) {\n        setDims({\n          width: rect.width,\n          height: rect.height\n        });\n      }\n    });\n    observer.observe(containerEl);\n    return function () {\n      observer.unobserve(containerEl);\n    };\n  }, [containerEl]);\n\n  var _React$useState3 = React.useState(true),\n      isIntersecting = _React$useState3[0],\n      setIsIntersecting = _React$useState3[1];\n\n  React.useEffect(function () {\n    if (!containerEl || !options.useIntersectionObserver) return;\n    var observer = new IntersectionObserver(function (entries) {\n      for (var _iterator = _createForOfIteratorHelperLoose(entries), _step; !(_step = _iterator()).done;) {\n        var entry = _step.value;\n\n        if (entry.isIntersecting) {\n          setIsIntersecting(true);\n        } else {\n          setIsIntersecting(false);\n        }\n      }\n    }, {\n      root: nearestScrollableParent,\n      rootMargin: options.intersectionObserverRootMargin\n    });\n    observer.observe(containerEl);\n    return function () {\n      observer.unobserve(containerEl);\n    };\n  }, [containerEl, nearestScrollableParent, options.intersectionObserverRootMargin, options.useIntersectionObserver]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: setContainerElement\n  }, rest, {\n    className: \"ReactChart \" + (className || ''),\n    style: _extends({}, style, {\n      position: 'absolute',\n      width: width,\n      height: height\n    })\n  }), isIntersecting ? /*#__PURE__*/React.createElement(ChartInner, {\n    options: options,\n    width: width,\n    height: height\n  }) : null);\n}\n\nfunction ChartInner(_ref2) {\n  var _options$renderSVG;\n\n  var options = _ref2.options,\n      width = _ref2.width,\n      height = _ref2.height;\n\n  if (!options.primaryAxis) {\n    throw new Error('A primaryAxis is required');\n  }\n\n  if (!options.secondaryAxes.length) {\n    throw new Error('At least one secondaryAxis is required');\n  }\n\n  var primaryAxisOptions = React.useMemo(function () {\n    var firstValue = getFirstDefinedValue(options.primaryAxis, options.data);\n    var optionsWithScaleType = axisOptionsWithScaleType(options.primaryAxis, firstValue);\n    return _extends({\n      position: 'bottom'\n    }, optionsWithScaleType);\n  }, [options.data, options.primaryAxis]);\n  var secondaryAxesOptions = React.useMemo(function () {\n    return options.secondaryAxes.map(function (secondaryAxis, i) {\n      var firstValue = getFirstDefinedValue(secondaryAxis, options.data);\n      var optionsWithScaleType = axisOptionsWithScaleType(secondaryAxis, firstValue);\n\n      if (!optionsWithScaleType.elementType) {\n        if (primaryAxisOptions.scaleType === 'band') {\n          optionsWithScaleType.elementType = 'bar';\n        } else if (optionsWithScaleType.stacked) {\n          optionsWithScaleType.elementType = 'area';\n        }\n      }\n\n      if (typeof optionsWithScaleType.stacked === 'undefined' && optionsWithScaleType.elementType && ['bar', 'area'].includes(optionsWithScaleType.elementType)) {\n        optionsWithScaleType.stacked = true;\n      }\n\n      return _extends({\n        position: !i ? 'left' : 'right'\n      }, optionsWithScaleType);\n    });\n  }, [options.data, options.secondaryAxes, primaryAxisOptions]);\n  var svgRef = React.useRef(null);\n  var getOptions = useGetLatest(options);\n  var axisDimensionsState = React.useState({\n    left: {},\n    right: {},\n    top: {},\n    bottom: {}\n  });\n  var axisDimensions = axisDimensionsState[0];\n  var focusedDatumState = React.useState(null);\n  var focusedDatum = focusedDatumState[0]; // useAtom<Datum<TDatum> | null>(focusedDatumAtom)\n\n  var gridDimensions = React.useMemo(function () {\n    // Left\n    var _map = ['width', 'top', 'bottom'].map(function (prop) {\n      return sumAllDimensionProperties(axisDimensions.left, prop);\n    }),\n        axesLeftWidth = _map[0],\n        axesLeftTop = _map[1],\n        axesLeftBottom = _map[2];\n\n    var _map2 = ['width', 'top', 'bottom'].map(function (prop) {\n      return sumAllDimensionProperties(axisDimensions.right, prop);\n    }),\n        axesRightWidth = _map2[0],\n        axesRightTop = _map2[1],\n        axesRightBottom = _map2[2];\n\n    var _map3 = ['height', 'left', 'right'].map(function (prop) {\n      return sumAllDimensionProperties(axisDimensions.top, prop);\n    }),\n        axesTopHeight = _map3[0],\n        axesTopLeft = _map3[1],\n        axesTopRight = _map3[2];\n\n    var _map4 = ['height', 'left', 'right'].map(function (prop) {\n      return sumAllDimensionProperties(axisDimensions.bottom, prop);\n    }),\n        axesBottomHeight = _map4[0],\n        axesBottomLeft = _map4[1],\n        axesBottomRight = _map4[2];\n\n    var gridX = Math.max(axesLeftWidth, axesTopLeft, axesBottomLeft);\n    var gridY = Math.max(axesTopHeight, axesLeftTop, axesRightTop);\n    var gridWidth = Math.max(0, width - Math.max(axesLeftWidth, axesTopLeft, axesBottomLeft) - Math.max(axesRightWidth, axesTopRight, axesBottomRight));\n    var gridHeight = Math.max(0, height - Math.max(axesTopHeight, axesLeftTop, axesRightTop) - Math.max(axesBottomHeight, axesLeftBottom, axesRightBottom));\n    return {\n      gridX: gridX,\n      gridY: gridY,\n      gridWidth: gridWidth,\n      gridHeight: gridHeight\n    };\n  }, [width, height, axisDimensions]);\n  var series = React.useMemo(function () {\n    var series = [];\n\n    for (var seriesIndex = 0; seriesIndex < options.data.length; seriesIndex++) {\n      var _originalSeries$id, _originalSeries$label;\n\n      var originalSeries = options.data[seriesIndex];\n      var seriesId = (_originalSeries$id = originalSeries.id) != null ? _originalSeries$id : seriesIndex + '';\n      var seriesLabel = (_originalSeries$label = originalSeries.label) != null ? _originalSeries$label : \"Series \" + (seriesIndex + 1);\n      var secondaryAxisId = originalSeries.secondaryAxisId;\n      var originalDatums = originalSeries.data;\n      var datums = [];\n\n      for (var datumIndex = 0; datumIndex < originalDatums.length; datumIndex++) {\n        var originalDatum = originalDatums[datumIndex];\n        datums[datumIndex] = {\n          originalSeries: originalSeries,\n          seriesIndex: seriesIndex,\n          seriesId: seriesId,\n          seriesLabel: seriesLabel,\n          secondaryAxisId: secondaryAxisId,\n          index: datumIndex,\n          originalDatum: originalDatum\n        };\n      }\n\n      series[seriesIndex] = {\n        originalSeries: originalSeries,\n        index: seriesIndex,\n        id: seriesId,\n        label: seriesLabel,\n        secondaryAxisId: secondaryAxisId,\n        datums: datums\n      };\n    }\n\n    if (secondaryAxesOptions.some(function (axisOptions) {\n      return axisOptions.stacked;\n    })) {\n      secondaryAxesOptions.filter(function (d) {\n        return d.stacked;\n      }).forEach(function (secondaryAxis) {\n        var _secondaryAxis$stackO;\n\n        var axisSeries = series.filter(function (s) {\n          return s.secondaryAxisId === secondaryAxis.id;\n        });\n        var seriesIndices = Object.keys(axisSeries);\n        var stacker = stack().keys(seriesIndices).value(function (_, seriesIndex, index) {\n          var val = secondaryAxis.getValue(axisSeries[Number(seriesIndex)].datums[index].originalDatum);\n\n          if (typeof val === 'undefined' || val === null) {\n            return 0;\n          }\n\n          return val;\n        }).offset((_secondaryAxis$stackO = secondaryAxis.stackOffset) != null ? _secondaryAxis$stackO : stackOffsetNone);\n        var stacked = stacker(Array.from({\n          length: axisSeries.sort(function (a, b) {\n            return b.datums.length - a.datums.length;\n          })[0].datums.length\n        }));\n        stacked.forEach(function (s, sIndex) {\n          s.forEach(function (datum, i) {\n            // @ts-ignore\n            datum.data = axisSeries[sIndex].datums[i];\n            axisSeries[sIndex].datums[i].stackData = datum;\n          });\n        });\n      });\n    }\n\n    return series;\n  }, [options.data, secondaryAxesOptions]);\n  var primaryAxis = React.useMemo(function () {\n    return buildAxisLinear(true, primaryAxisOptions, series, gridDimensions, width, height);\n  }, [gridDimensions, height, primaryAxisOptions, series, width]);\n  var secondaryAxes = React.useMemo(function () {\n    return secondaryAxesOptions.map(function (secondaryAxis) {\n      return buildAxisLinear(false, secondaryAxis, series, gridDimensions, width, height);\n    });\n  }, [gridDimensions, height, secondaryAxesOptions, series, width]);\n  var axesInfo = React.useMemo(function () {\n    // Make sure we're mapping x and y to the correct axes\n    var xKey = primaryAxis.isVertical ? 'secondary' : 'primary';\n    var yKey = primaryAxis.isVertical ? 'primary' : 'secondary';\n    return {\n      xKey: xKey,\n      yKey: yKey\n    };\n  }, [primaryAxis]);\n  var groupedDatums = React.useMemo(function () {\n    var groupedDatums = new Map();\n    var allDatums = series.map(function (s) {\n      return s.datums;\n    }).flat(2);\n    allDatums.forEach(function (datum) {\n      var primaryValue = \"\" + primaryAxis.getValue(datum.originalDatum);\n\n      if (!groupedDatums.has(primaryValue)) {\n        groupedDatums.set(primaryValue, []);\n      }\n\n      groupedDatums.get(primaryValue).push(datum);\n    });\n    allDatums.forEach(function (datum) {\n      var primaryValue = \"\" + primaryAxis.getValue(datum.originalDatum);\n      datum.group = groupedDatums.get(primaryValue);\n    });\n    return groupedDatums;\n  }, [primaryAxis, series]);\n  var getSeriesStatusStyle = React.useCallback(function (series, focusedDatum) {\n    var _getOptions$getSeries, _getOptions$getSeries2, _getOptions;\n\n    var base = {\n      color: getOptions().defaultColors[series.index % (getOptions().defaultColors.length - 1)]\n    };\n    var status = getSeriesStatus(series, focusedDatum);\n    var statusStyles = (_getOptions$getSeries = (_getOptions$getSeries2 = (_getOptions = getOptions()).getSeriesStyle) == null ? void 0 : _getOptions$getSeries2.call(_getOptions, series, status)) != null ? _getOptions$getSeries : {};\n    series.style = materializeStyles(statusStyles, base);\n    return series.style;\n  }, [getOptions]);\n  var getDatumStatusStyle = React.useCallback(function (datum, focusedDatum) {\n    var _series$datum$seriesI, _getOptions$getDatumS, _getOptions$getDatumS2, _getOptions2;\n\n    var base = _extends({}, (_series$datum$seriesI = series[datum.seriesIndex]) == null ? void 0 : _series$datum$seriesI.style, {\n      color: getOptions().defaultColors[datum.seriesIndex % (getOptions().defaultColors.length - 1)]\n    });\n\n    var status = getDatumStatus(datum, focusedDatum);\n    var statusStyles = (_getOptions$getDatumS = (_getOptions$getDatumS2 = (_getOptions2 = getOptions()).getDatumStyle) == null ? void 0 : _getOptions$getDatumS2.call(_getOptions2, datum, status)) != null ? _getOptions$getDatumS : {};\n    datum.style = materializeStyles(statusStyles, base);\n    return datum.style;\n  }, [getOptions, series]); // Reverse the stack order for proper z-indexing\n\n  var orderedSeries = React.useMemo(function () {\n    var reversedSeries = [].concat(series).reverse();\n    return getOptions().getSeriesOrder(reversedSeries);\n  }, [getOptions, series]);\n  useIsomorphicLayoutEffect(function () {\n    if (svgRef.current && svgRef.current.parentElement && !svgRef.current.parentElement.style.position) {\n      svgRef.current.parentElement.style.position = 'relative';\n    }\n  });\n  var contextValue = {\n    getOptions: getOptions,\n    gridDimensions: gridDimensions,\n    primaryAxis: primaryAxis,\n    secondaryAxes: secondaryAxes,\n    axesInfo: axesInfo,\n    series: series,\n    orderedSeries: orderedSeries,\n    groupedDatums: groupedDatums,\n    width: width,\n    height: height,\n    getSeriesStatusStyle: getSeriesStatusStyle,\n    getDatumStatusStyle: getDatumStatusStyle,\n    axisDimensionsState: axisDimensionsState,\n    focusedDatumState: focusedDatumState,\n    svgRef: svgRef\n  };\n  var seriesByAxisId = React.useMemo(function () {\n    return sort(groups(orderedSeries, function (d) {\n      return d.secondaryAxisId;\n    }), function (_ref3) {\n      var key = _ref3[0];\n      return secondaryAxes.findIndex(function (axis) {\n        return axis.id === key;\n      });\n    });\n  }, [orderedSeries, secondaryAxes]);\n  var memoizeSeries = !options.getDatumStyle && !options.getSeriesStyle; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  var getSeriesInfo = function getSeriesInfo() {\n    return {\n      primaryAxis: primaryAxis,\n      secondaryAxes: secondaryAxes,\n      seriesByAxisId: seriesByAxisId\n    };\n  };\n\n  var getMemoizedSeriesInfo = React.useCallback(function () {\n    return {\n      primaryAxis: primaryAxis,\n      secondaryAxes: secondaryAxes,\n      seriesByAxisId: seriesByAxisId\n    };\n  }, [primaryAxis, secondaryAxes, seriesByAxisId]);\n\n  if (memoizeSeries) {\n    getSeriesInfo = getMemoizedSeriesInfo;\n  }\n\n  var seriesEl = React.useMemo(function () {\n    var _getSeriesInfo = getSeriesInfo(),\n        primaryAxis = _getSeriesInfo.primaryAxis,\n        secondaryAxes = _getSeriesInfo.secondaryAxes,\n        seriesByAxisId = _getSeriesInfo.seriesByAxisId;\n\n    return seriesByAxisId.map(function (_ref4) {\n      var axisId = _ref4[0],\n          series = _ref4[1];\n      var secondaryAxis = secondaryAxes.find(function (d) {\n        return d.id === axisId;\n      });\n\n      if (!secondaryAxis) {\n        return null;\n      }\n\n      var elementType = secondaryAxis.elementType;\n\n      var Component = function () {\n        if (elementType === 'line') {\n          return Line;\n        }\n\n        if (elementType === 'bar') {\n          return Bar;\n        }\n\n        if (elementType === 'area') {\n          return Area;\n        }\n\n        throw new Error('Invalid elementType');\n      }();\n\n      return /*#__PURE__*/React.createElement(Component, {\n        key: axisId != null ? axisId : '__default__',\n        primaryAxis: primaryAxis,\n        secondaryAxis: secondaryAxis,\n        series: series\n      });\n    });\n  }, [getSeriesInfo]);\n  return /*#__PURE__*/React.createElement(ChartContextProvider, {\n    value: useGetLatest(contextValue)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'sans-serif'\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef,\n    style: {\n      width: width,\n      height: height,\n      overflow: options.brush ? 'hidden' : 'visible'\n    },\n    onClick: function onClick(e) {\n      return options.onClickDatum == null ? void 0 : options.onClickDatum(focusedDatum, e);\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"Series\",\n    style: {\n      pointerEvents: 'none'\n    }\n  }, seriesEl), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"axes\"\n  }, [primaryAxis].concat(secondaryAxes).map(function (axis) {\n    return /*#__PURE__*/React.createElement(AxisLinear, _extends({\n      key: [axis.position, axis.id].join('')\n    }, axis));\n  })), /*#__PURE__*/React.createElement(Voronoi, null), (_options$renderSVG = options.renderSVG == null ? void 0 : options.renderSVG()) != null ? _options$renderSVG : null), /*#__PURE__*/React.createElement(Cursors, null), /*#__PURE__*/React.createElement(Tooltip, null)));\n}\n\nfunction sumAllDimensionProperties(axisDimensions, side) {\n  var sum = 0;\n  Object.keys(axisDimensions).forEach(function (axisId) {\n    var _axisDimensions$axisI;\n\n    sum += ((_axisDimensions$axisI = axisDimensions[axisId]) == null ? void 0 : _axisDimensions$axisI[side]) || 0;\n  });\n  return sum;\n}\n\nfunction getFirstDefinedValue(options, data) {\n  var firstDefinedValue;\n  data.some(function (serie) {\n    return serie.data.some(function (originalDatum) {\n      var value = options.getValue(originalDatum);\n\n      if (value !== null && typeof value !== 'undefined') {\n        firstDefinedValue = value;\n        return true;\n      }\n    });\n  });\n  return firstDefinedValue;\n}\n\nfunction axisOptionsWithScaleType(options, firstValue) {\n  var scaleType = options.scaleType;\n\n  if (!options.scaleType) {\n    if (typeof firstValue === 'number') {\n      scaleType = 'linear';\n    } else if (typeof (firstValue == null ? void 0 : firstValue.getMonth) === 'function') {\n      scaleType = 'time';\n    } else if (typeof firstValue === 'string' || typeof firstValue === 'boolean') {\n      scaleType = 'band';\n    } else {\n      throw new Error('Invalid scale type: Unable to infer type from data');\n    }\n  }\n\n  return _extends({}, options, {\n    scaleType: scaleType\n  });\n}","map":{"version":3,"sources":["/Users/samerkadih/Desktop/Coding/Personal/React/kelly-criterion/node_modules/react-charts/es/components/Chart.js"],"names":["_createForOfIteratorHelperLoose","_objectWithoutPropertiesLoose","_extends","_excluded","groups","sort","stack","stackOffsetNone","React","useGetLatest","useIsomorphicLayoutEffect","Area","Bar","Line","materializeStyles","getSeriesStatus","getDatumStatus","buildAxisLinear","ChartContextProvider","AxisLinear","Cursors","Tooltip","Voronoi","defaultColorScheme","defaultChartOptions","options","_options$initialWidth","_options$initialHeigh","_options$getSeriesOrd","_options$groupingMode","_options$showVoronoi","_options$defaultColor","_options$useIntersect","_options$intersection","_options$tooltip","_options$primaryCurso","_options$secondaryCur","initialWidth","initialHeight","getSeriesOrder","series","groupingMode","showVoronoi","defaultColors","useIntersectionObserver","intersectionObserverRootMargin","tooltip","primaryCursor","secondaryCursor","Chart","_ref","userOptions","className","_ref$style","style","rest","_React$useState","useState","chartElement","setContainerElement","containerEl","parentElement","nearestScrollableParent","useMemo","run","el","grandParent","scrollHeight","clientHeight","_window$getComputedSt","window","getComputedStyle","overflow","includes","_React$useState2","width","height","_React$useState2$","setDims","computed","position","useEffect","observer","ResizeObserver","rect","getBoundingClientRect","observe","unobserve","_React$useState3","isIntersecting","setIsIntersecting","IntersectionObserver","entries","_iterator","_step","done","entry","value","root","rootMargin","createElement","ref","ChartInner","_ref2","_options$renderSVG","primaryAxis","Error","secondaryAxes","length","primaryAxisOptions","firstValue","getFirstDefinedValue","data","optionsWithScaleType","axisOptionsWithScaleType","secondaryAxesOptions","map","secondaryAxis","i","elementType","scaleType","stacked","svgRef","useRef","getOptions","axisDimensionsState","left","right","top","bottom","axisDimensions","focusedDatumState","focusedDatum","gridDimensions","_map","prop","sumAllDimensionProperties","axesLeftWidth","axesLeftTop","axesLeftBottom","_map2","axesRightWidth","axesRightTop","axesRightBottom","_map3","axesTopHeight","axesTopLeft","axesTopRight","_map4","axesBottomHeight","axesBottomLeft","axesBottomRight","gridX","Math","max","gridY","gridWidth","gridHeight","seriesIndex","_originalSeries$id","_originalSeries$label","originalSeries","seriesId","id","seriesLabel","label","secondaryAxisId","originalDatums","datums","datumIndex","originalDatum","index","some","axisOptions","filter","d","forEach","_secondaryAxis$stackO","axisSeries","s","seriesIndices","Object","keys","stacker","_","val","getValue","Number","offset","stackOffset","Array","from","a","b","sIndex","datum","stackData","axesInfo","xKey","isVertical","yKey","groupedDatums","Map","allDatums","flat","primaryValue","has","set","get","push","group","getSeriesStatusStyle","useCallback","_getOptions$getSeries","_getOptions$getSeries2","_getOptions","base","color","status","statusStyles","getSeriesStyle","call","getDatumStatusStyle","_series$datum$seriesI","_getOptions$getDatumS","_getOptions$getDatumS2","_getOptions2","getDatumStyle","orderedSeries","reversedSeries","concat","reverse","current","contextValue","seriesByAxisId","_ref3","key","findIndex","axis","memoizeSeries","getSeriesInfo","getMemoizedSeriesInfo","seriesEl","_getSeriesInfo","_ref4","axisId","find","Component","fontFamily","brush","onClick","e","onClickDatum","pointerEvents","join","renderSVG","side","sum","_axisDimensions$axisI","firstDefinedValue","serie","getMonth"],"mappings":"AAAA,OAAOA,+BAAP,MAA4C,2DAA5C;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,IAAIC,SAAS,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB,CAAhB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,UAA7B;AACA,SAASC,KAAT,EAAgBC,eAAhB,QAAuC,UAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,yBAAP,MAAsC,oCAAtC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,IAAP,MAAiB,qBAAjB,C,CAAwC;;AAExC,SAASC,iBAAT,EAA4BC,eAA5B,EAA6CC,cAA7C,QAAmE,gBAAnE;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,oBAAT,QAAqC,uBAArC;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAAuC;;AAEvC,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAAiC;AACjC;;AAEA,IAAIC,kBAAkB,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,EAA0H,SAA1H,EAAqI,SAArI,EAAgJ,SAAhJ,EAA2J,SAA3J,EAAsK,SAAtK,CAAzB;;AAEA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AACpC,MAAIC,qBAAJ,EAA2BC,qBAA3B,EAAkDC,qBAAlD,EAAyEC,qBAAzE,EAAgGC,oBAAhG,EAAsHC,qBAAtH,EAA6IC,qBAA7I,EAAoKC,qBAApK,EAA2LC,gBAA3L,EAA6MC,qBAA7M,EAAoOC,qBAApO;;AAEA,SAAOlC,QAAQ,CAAC,EAAD,EAAKuB,OAAL,EAAc;AAC3BY,IAAAA,YAAY,EAAE,CAACX,qBAAqB,GAAGD,OAAO,CAACY,YAAjC,KAAkD,IAAlD,GAAyDX,qBAAzD,GAAiF,GADpE;AAE3BY,IAAAA,aAAa,EAAE,CAACX,qBAAqB,GAAGF,OAAO,CAACa,aAAjC,KAAmD,IAAnD,GAA0DX,qBAA1D,GAAkF,GAFtE;AAG3BY,IAAAA,cAAc,EAAE,CAACX,qBAAqB,GAAGH,OAAO,CAACc,cAAjC,KAAoD,IAApD,GAA2DX,qBAA3D,GAAmF,UAAUY,MAAV,EAAkB;AACnH,aAAOA,MAAP;AACD,KAL0B;AAM3BC,IAAAA,YAAY,EAAE,CAACZ,qBAAqB,GAAGJ,OAAO,CAACgB,YAAjC,KAAkD,IAAlD,GAAyDZ,qBAAzD,GAAiF,SANpE;AAO3Ba,IAAAA,WAAW,EAAE,CAACZ,oBAAoB,GAAGL,OAAO,CAACiB,WAAhC,KAAgD,IAAhD,GAAuDZ,oBAAvD,GAA8E,KAPhE;AAQ3Ba,IAAAA,aAAa,EAAE,CAACZ,qBAAqB,GAAGN,OAAO,CAACkB,aAAjC,KAAmD,IAAnD,GAA0DZ,qBAA1D,GAAkFR,kBARtE;AAS3BqB,IAAAA,uBAAuB,EAAE,CAACZ,qBAAqB,GAAGP,OAAO,CAACmB,uBAAjC,KAA6D,IAA7D,GAAoEZ,qBAApE,GAA4F,IAT1F;AAU3Ba,IAAAA,8BAA8B,EAAE,CAACZ,qBAAqB,GAAGR,OAAO,CAACoB,8BAAjC,KAAoE,IAApE,GAA2EZ,qBAA3E,GAAmG,QAVxG;AAW3Ba,IAAAA,OAAO,EAAE,CAACZ,gBAAgB,GAAGT,OAAO,CAACqB,OAA5B,KAAwC,IAAxC,GAA+CZ,gBAA/C,GAAkE,IAXhD;AAY3Ba,IAAAA,aAAa,EAAE,CAACZ,qBAAqB,GAAGV,OAAO,CAACsB,aAAjC,KAAmD,IAAnD,GAA0DZ,qBAA1D,GAAkF,IAZtE;AAa3Ba,IAAAA,eAAe,EAAE,CAACZ,qBAAqB,GAAGX,OAAO,CAACuB,eAAjC,KAAqD,IAArD,GAA4DZ,qBAA5D,GAAoF;AAb1E,GAAd,CAAf;AAeD;;AAED,OAAO,SAASa,KAAT,CAAeC,IAAf,EAAqB;AAC1B,MAAIC,WAAW,GAAGD,IAAI,CAACzB,OAAvB;AAAA,MACI2B,SAAS,GAAGF,IAAI,CAACE,SADrB;AAAA,MAEIC,UAAU,GAAGH,IAAI,CAACI,KAFtB;AAAA,MAGIA,KAAK,GAAGD,UAAU,KAAK,KAAK,CAApB,GAAwB,EAAxB,GAA6BA,UAHzC;AAAA,MAIIE,IAAI,GAAGtD,6BAA6B,CAACiD,IAAD,EAAO/C,SAAP,CAJxC;;AAMA,MAAIsB,OAAO,GAAGD,mBAAmB,CAAC2B,WAAD,CAAjC;;AAEA,MAAIK,eAAe,GAAGhD,KAAK,CAACiD,QAAN,CAAe,IAAf,CAAtB;AAAA,MACIC,YAAY,GAAGF,eAAe,CAAC,CAAD,CADlC;AAAA,MAEIG,mBAAmB,GAAGH,eAAe,CAAC,CAAD,CAFzC;;AAIA,MAAII,WAAW,GAAGF,YAAY,IAAI,IAAhB,GAAuB,KAAK,CAA5B,GAAgCA,YAAY,CAACG,aAA/D;AACA,MAAIC,uBAAuB,GAAGtD,KAAK,CAACuD,OAAN,CAAc,YAAY;AACtD,QAAIC,GAAG,GAAG,SAASA,GAAT,CAAaC,EAAb,EAAiB;AACzB,UAAI,CAACA,EAAL,EAAS;AACP,eAAO,IAAP;AACD;;AAED,UAAIC,WAAW,GAAGD,EAAE,CAACJ,aAArB;;AAEA,UAAI,CAACK,WAAL,EAAkB;AAChB,eAAO,IAAP;AACD;;AAED,UAAIA,WAAW,CAACC,YAAZ,GAA2BD,WAAW,CAACE,YAA3C,EAAyD;AACvD,YAAIC,qBAAqB,GAAGC,MAAM,CAACC,gBAAP,CAAwBL,WAAxB,CAA5B;AAAA,YACIM,QAAQ,GAAGH,qBAAqB,CAACG,QADrC;;AAGA,YAAIA,QAAQ,CAACC,QAAT,CAAkB,QAAlB,KAA+BD,QAAQ,CAACC,QAAT,CAAkB,MAAlB,CAAnC,EAA8D;AAC5D,iBAAOP,WAAP;AACD;AACF;;AAED,aAAOF,GAAG,CAACE,WAAD,CAAV;AACD,KArBD;;AAuBA,WAAOF,GAAG,CAACJ,WAAD,CAAV;AACD,GAzB6B,EAyB3B,CAACA,WAAD,CAzB2B,CAA9B;;AA2BA,MAAIc,gBAAgB,GAAGlE,KAAK,CAACiD,QAAN,CAAe;AACpCkB,IAAAA,KAAK,EAAElD,OAAO,CAACY,YADqB;AAEpCuC,IAAAA,MAAM,EAAEnD,OAAO,CAACa;AAFoB,GAAf,CAAvB;AAAA,MAIIuC,iBAAiB,GAAGH,gBAAgB,CAAC,CAAD,CAJxC;AAAA,MAKIC,KAAK,GAAGE,iBAAiB,CAACF,KAL9B;AAAA,MAMIC,MAAM,GAAGC,iBAAiB,CAACD,MAN/B;AAAA,MAOIE,OAAO,GAAGJ,gBAAgB,CAAC,CAAD,CAP9B;;AASAhE,EAAAA,yBAAyB,CAAC,YAAY;AACpC,QAAIkD,WAAJ,EAAiB;AACf,UAAImB,QAAQ,GAAGT,MAAM,CAACC,gBAAP,CAAwBX,WAAxB,CAAf;;AAEA,UAAI,CAAC,CAAC,UAAD,EAAa,UAAb,EAAyB,OAAzB,EAAkCa,QAAlC,CAA2CM,QAAQ,CAACC,QAApD,CAAL,EAAoE;AAClEpB,QAAAA,WAAW,CAACN,KAAZ,CAAkB0B,QAAlB,GAA6B,UAA7B;AACD;AACF;AACF,GARwB,EAQtB,CAACpB,WAAD,CARsB,CAAzB;AASApD,EAAAA,KAAK,CAACyE,SAAN,CAAgB,YAAY;AAC1B,QAAI,CAACrB,WAAL,EAAkB;AAChB;AACD;;AAED,QAAIsB,QAAQ,GAAG,IAAIC,cAAJ,CAAmB,YAAY;AAC5C,UAAIC,IAAI,GAAGxB,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACyB,qBAAZ,EAA1C;;AAEA,UAAID,IAAJ,EAAU;AACRN,QAAAA,OAAO,CAAC;AACNH,UAAAA,KAAK,EAAES,IAAI,CAACT,KADN;AAENC,UAAAA,MAAM,EAAEQ,IAAI,CAACR;AAFP,SAAD,CAAP;AAID;AACF,KATc,CAAf;AAUAM,IAAAA,QAAQ,CAACI,OAAT,CAAiB1B,WAAjB;AACA,WAAO,YAAY;AACjBsB,MAAAA,QAAQ,CAACK,SAAT,CAAmB3B,WAAnB;AACD,KAFD;AAGD,GAnBD,EAmBG,CAACA,WAAD,CAnBH;;AAqBA,MAAI4B,gBAAgB,GAAGhF,KAAK,CAACiD,QAAN,CAAe,IAAf,CAAvB;AAAA,MACIgC,cAAc,GAAGD,gBAAgB,CAAC,CAAD,CADrC;AAAA,MAEIE,iBAAiB,GAAGF,gBAAgB,CAAC,CAAD,CAFxC;;AAIAhF,EAAAA,KAAK,CAACyE,SAAN,CAAgB,YAAY;AAC1B,QAAI,CAACrB,WAAD,IAAgB,CAACnC,OAAO,CAACmB,uBAA7B,EAAsD;AACtD,QAAIsC,QAAQ,GAAG,IAAIS,oBAAJ,CAAyB,UAAUC,OAAV,EAAmB;AACzD,WAAK,IAAIC,SAAS,GAAG7F,+BAA+B,CAAC4F,OAAD,CAA/C,EAA0DE,KAA/D,EAAsE,CAAC,CAACA,KAAK,GAAGD,SAAS,EAAlB,EAAsBE,IAA7F,GAAoG;AAClG,YAAIC,KAAK,GAAGF,KAAK,CAACG,KAAlB;;AAEA,YAAID,KAAK,CAACP,cAAV,EAA0B;AACxBC,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,SAFD,MAEO;AACLA,UAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF;AACF,KAVc,EAUZ;AACDQ,MAAAA,IAAI,EAAEpC,uBADL;AAEDqC,MAAAA,UAAU,EAAE1E,OAAO,CAACoB;AAFnB,KAVY,CAAf;AAcAqC,IAAAA,QAAQ,CAACI,OAAT,CAAiB1B,WAAjB;AACA,WAAO,YAAY;AACjBsB,MAAAA,QAAQ,CAACK,SAAT,CAAmB3B,WAAnB;AACD,KAFD;AAGD,GApBD,EAoBG,CAACA,WAAD,EAAcE,uBAAd,EAAuCrC,OAAO,CAACoB,8BAA/C,EAA+EpB,OAAO,CAACmB,uBAAvF,CApBH;AAqBA,SAAO,aAAapC,KAAK,CAAC4F,aAAN,CAAoB,KAApB,EAA2BlG,QAAQ,CAAC;AACtDmG,IAAAA,GAAG,EAAE1C;AADiD,GAAD,EAEpDJ,IAFoD,EAE9C;AACPH,IAAAA,SAAS,EAAE,iBAAiBA,SAAS,IAAI,EAA9B,CADJ;AAEPE,IAAAA,KAAK,EAAEpD,QAAQ,CAAC,EAAD,EAAKoD,KAAL,EAAY;AACzB0B,MAAAA,QAAQ,EAAE,UADe;AAEzBL,MAAAA,KAAK,EAAEA,KAFkB;AAGzBC,MAAAA,MAAM,EAAEA;AAHiB,KAAZ;AAFR,GAF8C,CAAnC,EAShBa,cAAc,GAAG,aAAajF,KAAK,CAAC4F,aAAN,CAAoBE,UAApB,EAAgC;AAChE7E,IAAAA,OAAO,EAAEA,OADuD;AAEhEkD,IAAAA,KAAK,EAAEA,KAFyD;AAGhEC,IAAAA,MAAM,EAAEA;AAHwD,GAAhC,CAAhB,GAIb,IAbe,CAApB;AAcD;;AAED,SAAS0B,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIC,kBAAJ;;AAEA,MAAI/E,OAAO,GAAG8E,KAAK,CAAC9E,OAApB;AAAA,MACIkD,KAAK,GAAG4B,KAAK,CAAC5B,KADlB;AAAA,MAEIC,MAAM,GAAG2B,KAAK,CAAC3B,MAFnB;;AAIA,MAAI,CAACnD,OAAO,CAACgF,WAAb,EAA0B;AACxB,UAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAED,MAAI,CAACjF,OAAO,CAACkF,aAAR,CAAsBC,MAA3B,EAAmC;AACjC,UAAM,IAAIF,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,MAAIG,kBAAkB,GAAGrG,KAAK,CAACuD,OAAN,CAAc,YAAY;AACjD,QAAI+C,UAAU,GAAGC,oBAAoB,CAACtF,OAAO,CAACgF,WAAT,EAAsBhF,OAAO,CAACuF,IAA9B,CAArC;AACA,QAAIC,oBAAoB,GAAGC,wBAAwB,CAACzF,OAAO,CAACgF,WAAT,EAAsBK,UAAtB,CAAnD;AACA,WAAO5G,QAAQ,CAAC;AACd8E,MAAAA,QAAQ,EAAE;AADI,KAAD,EAEZiC,oBAFY,CAAf;AAGD,GANwB,EAMtB,CAACxF,OAAO,CAACuF,IAAT,EAAevF,OAAO,CAACgF,WAAvB,CANsB,CAAzB;AAOA,MAAIU,oBAAoB,GAAG3G,KAAK,CAACuD,OAAN,CAAc,YAAY;AACnD,WAAOtC,OAAO,CAACkF,aAAR,CAAsBS,GAAtB,CAA0B,UAAUC,aAAV,EAAyBC,CAAzB,EAA4B;AAC3D,UAAIR,UAAU,GAAGC,oBAAoB,CAACM,aAAD,EAAgB5F,OAAO,CAACuF,IAAxB,CAArC;AACA,UAAIC,oBAAoB,GAAGC,wBAAwB,CAACG,aAAD,EAAgBP,UAAhB,CAAnD;;AAEA,UAAI,CAACG,oBAAoB,CAACM,WAA1B,EAAuC;AACrC,YAAIV,kBAAkB,CAACW,SAAnB,KAAiC,MAArC,EAA6C;AAC3CP,UAAAA,oBAAoB,CAACM,WAArB,GAAmC,KAAnC;AACD,SAFD,MAEO,IAAIN,oBAAoB,CAACQ,OAAzB,EAAkC;AACvCR,UAAAA,oBAAoB,CAACM,WAArB,GAAmC,MAAnC;AACD;AACF;;AAED,UAAI,OAAON,oBAAoB,CAACQ,OAA5B,KAAwC,WAAxC,IAAuDR,oBAAoB,CAACM,WAA5E,IAA2F,CAAC,KAAD,EAAQ,MAAR,EAAgB9C,QAAhB,CAAyBwC,oBAAoB,CAACM,WAA9C,CAA/F,EAA2J;AACzJN,QAAAA,oBAAoB,CAACQ,OAArB,GAA+B,IAA/B;AACD;;AAED,aAAOvH,QAAQ,CAAC;AACd8E,QAAAA,QAAQ,EAAE,CAACsC,CAAD,GAAK,MAAL,GAAc;AADV,OAAD,EAEZL,oBAFY,CAAf;AAGD,KAnBM,CAAP;AAoBD,GArB0B,EAqBxB,CAACxF,OAAO,CAACuF,IAAT,EAAevF,OAAO,CAACkF,aAAvB,EAAsCE,kBAAtC,CArBwB,CAA3B;AAsBA,MAAIa,MAAM,GAAGlH,KAAK,CAACmH,MAAN,CAAa,IAAb,CAAb;AACA,MAAIC,UAAU,GAAGnH,YAAY,CAACgB,OAAD,CAA7B;AACA,MAAIoG,mBAAmB,GAAGrH,KAAK,CAACiD,QAAN,CAAe;AACvCqE,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,GAAG,EAAE,EAHkC;AAIvCC,IAAAA,MAAM,EAAE;AAJ+B,GAAf,CAA1B;AAMA,MAAIC,cAAc,GAAGL,mBAAmB,CAAC,CAAD,CAAxC;AACA,MAAIM,iBAAiB,GAAG3H,KAAK,CAACiD,QAAN,CAAe,IAAf,CAAxB;AACA,MAAI2E,YAAY,GAAGD,iBAAiB,CAAC,CAAD,CAApC,CAtDyB,CAsDgB;;AAEzC,MAAIE,cAAc,GAAG7H,KAAK,CAACuD,OAAN,CAAc,YAAY;AAC7C;AACA,QAAIuE,IAAI,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,QAAjB,EAA2BlB,GAA3B,CAA+B,UAAUmB,IAAV,EAAgB;AACxD,aAAOC,yBAAyB,CAACN,cAAc,CAACJ,IAAhB,EAAsBS,IAAtB,CAAhC;AACD,KAFU,CAAX;AAAA,QAGIE,aAAa,GAAGH,IAAI,CAAC,CAAD,CAHxB;AAAA,QAIII,WAAW,GAAGJ,IAAI,CAAC,CAAD,CAJtB;AAAA,QAKIK,cAAc,GAAGL,IAAI,CAAC,CAAD,CALzB;;AAOA,QAAIM,KAAK,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,QAAjB,EAA2BxB,GAA3B,CAA+B,UAAUmB,IAAV,EAAgB;AACzD,aAAOC,yBAAyB,CAACN,cAAc,CAACH,KAAhB,EAAuBQ,IAAvB,CAAhC;AACD,KAFW,CAAZ;AAAA,QAGIM,cAAc,GAAGD,KAAK,CAAC,CAAD,CAH1B;AAAA,QAIIE,YAAY,GAAGF,KAAK,CAAC,CAAD,CAJxB;AAAA,QAKIG,eAAe,GAAGH,KAAK,CAAC,CAAD,CAL3B;;AAOA,QAAII,KAAK,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4B5B,GAA5B,CAAgC,UAAUmB,IAAV,EAAgB;AAC1D,aAAOC,yBAAyB,CAACN,cAAc,CAACF,GAAhB,EAAqBO,IAArB,CAAhC;AACD,KAFW,CAAZ;AAAA,QAGIU,aAAa,GAAGD,KAAK,CAAC,CAAD,CAHzB;AAAA,QAIIE,WAAW,GAAGF,KAAK,CAAC,CAAD,CAJvB;AAAA,QAKIG,YAAY,GAAGH,KAAK,CAAC,CAAD,CALxB;;AAOA,QAAII,KAAK,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4BhC,GAA5B,CAAgC,UAAUmB,IAAV,EAAgB;AAC1D,aAAOC,yBAAyB,CAACN,cAAc,CAACD,MAAhB,EAAwBM,IAAxB,CAAhC;AACD,KAFW,CAAZ;AAAA,QAGIc,gBAAgB,GAAGD,KAAK,CAAC,CAAD,CAH5B;AAAA,QAIIE,cAAc,GAAGF,KAAK,CAAC,CAAD,CAJ1B;AAAA,QAKIG,eAAe,GAAGH,KAAK,CAAC,CAAD,CAL3B;;AAOA,QAAII,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASjB,aAAT,EAAwBS,WAAxB,EAAqCI,cAArC,CAAZ;AACA,QAAIK,KAAK,GAAGF,IAAI,CAACC,GAAL,CAAST,aAAT,EAAwBP,WAAxB,EAAqCI,YAArC,CAAZ;AACA,QAAIc,SAAS,GAAGH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY/E,KAAK,GAAG8E,IAAI,CAACC,GAAL,CAASjB,aAAT,EAAwBS,WAAxB,EAAqCI,cAArC,CAAR,GAA+DG,IAAI,CAACC,GAAL,CAASb,cAAT,EAAyBM,YAAzB,EAAuCI,eAAvC,CAA3E,CAAhB;AACA,QAAIM,UAAU,GAAGJ,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY9E,MAAM,GAAG6E,IAAI,CAACC,GAAL,CAAST,aAAT,EAAwBP,WAAxB,EAAqCI,YAArC,CAAT,GAA8DW,IAAI,CAACC,GAAL,CAASL,gBAAT,EAA2BV,cAA3B,EAA2CI,eAA3C,CAA1E,CAAjB;AACA,WAAO;AACLS,MAAAA,KAAK,EAAEA,KADF;AAELG,MAAAA,KAAK,EAAEA,KAFF;AAGLC,MAAAA,SAAS,EAAEA,SAHN;AAILC,MAAAA,UAAU,EAAEA;AAJP,KAAP;AAMD,GAxCoB,EAwClB,CAAClF,KAAD,EAAQC,MAAR,EAAgBsD,cAAhB,CAxCkB,CAArB;AAyCA,MAAI1F,MAAM,GAAGhC,KAAK,CAACuD,OAAN,CAAc,YAAY;AACrC,QAAIvB,MAAM,GAAG,EAAb;;AAEA,SAAK,IAAIsH,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAGrI,OAAO,CAACuF,IAAR,CAAaJ,MAArD,EAA6DkD,WAAW,EAAxE,EAA4E;AAC1E,UAAIC,kBAAJ,EAAwBC,qBAAxB;;AAEA,UAAIC,cAAc,GAAGxI,OAAO,CAACuF,IAAR,CAAa8C,WAAb,CAArB;AACA,UAAII,QAAQ,GAAG,CAACH,kBAAkB,GAAGE,cAAc,CAACE,EAArC,KAA4C,IAA5C,GAAmDJ,kBAAnD,GAAwED,WAAW,GAAG,EAArG;AACA,UAAIM,WAAW,GAAG,CAACJ,qBAAqB,GAAGC,cAAc,CAACI,KAAxC,KAAkD,IAAlD,GAAyDL,qBAAzD,GAAiF,aAAaF,WAAW,GAAG,CAA3B,CAAnG;AACA,UAAIQ,eAAe,GAAGL,cAAc,CAACK,eAArC;AACA,UAAIC,cAAc,GAAGN,cAAc,CAACjD,IAApC;AACA,UAAIwD,MAAM,GAAG,EAAb;;AAEA,WAAK,IAAIC,UAAU,GAAG,CAAtB,EAAyBA,UAAU,GAAGF,cAAc,CAAC3D,MAArD,EAA6D6D,UAAU,EAAvE,EAA2E;AACzE,YAAIC,aAAa,GAAGH,cAAc,CAACE,UAAD,CAAlC;AACAD,QAAAA,MAAM,CAACC,UAAD,CAAN,GAAqB;AACnBR,UAAAA,cAAc,EAAEA,cADG;AAEnBH,UAAAA,WAAW,EAAEA,WAFM;AAGnBI,UAAAA,QAAQ,EAAEA,QAHS;AAInBE,UAAAA,WAAW,EAAEA,WAJM;AAKnBE,UAAAA,eAAe,EAAEA,eALE;AAMnBK,UAAAA,KAAK,EAAEF,UANY;AAOnBC,UAAAA,aAAa,EAAEA;AAPI,SAArB;AASD;;AAEDlI,MAAAA,MAAM,CAACsH,WAAD,CAAN,GAAsB;AACpBG,QAAAA,cAAc,EAAEA,cADI;AAEpBU,QAAAA,KAAK,EAAEb,WAFa;AAGpBK,QAAAA,EAAE,EAAED,QAHgB;AAIpBG,QAAAA,KAAK,EAAED,WAJa;AAKpBE,QAAAA,eAAe,EAAEA,eALG;AAMpBE,QAAAA,MAAM,EAAEA;AANY,OAAtB;AAQD;;AAED,QAAIrD,oBAAoB,CAACyD,IAArB,CAA0B,UAAUC,WAAV,EAAuB;AACnD,aAAOA,WAAW,CAACpD,OAAnB;AACD,KAFG,CAAJ,EAEI;AACFN,MAAAA,oBAAoB,CAAC2D,MAArB,CAA4B,UAAUC,CAAV,EAAa;AACvC,eAAOA,CAAC,CAACtD,OAAT;AACD,OAFD,EAEGuD,OAFH,CAEW,UAAU3D,aAAV,EAAyB;AAClC,YAAI4D,qBAAJ;;AAEA,YAAIC,UAAU,GAAG1I,MAAM,CAACsI,MAAP,CAAc,UAAUK,CAAV,EAAa;AAC1C,iBAAOA,CAAC,CAACb,eAAF,KAAsBjD,aAAa,CAAC8C,EAA3C;AACD,SAFgB,CAAjB;AAGA,YAAIiB,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYJ,UAAZ,CAApB;AACA,YAAIK,OAAO,GAAGjL,KAAK,GAAGgL,IAAR,CAAaF,aAAb,EAA4BnF,KAA5B,CAAkC,UAAUuF,CAAV,EAAa1B,WAAb,EAA0Ba,KAA1B,EAAiC;AAC/E,cAAIc,GAAG,GAAGpE,aAAa,CAACqE,QAAd,CAAuBR,UAAU,CAACS,MAAM,CAAC7B,WAAD,CAAP,CAAV,CAAgCU,MAAhC,CAAuCG,KAAvC,EAA8CD,aAArE,CAAV;;AAEA,cAAI,OAAOe,GAAP,KAAe,WAAf,IAA8BA,GAAG,KAAK,IAA1C,EAAgD;AAC9C,mBAAO,CAAP;AACD;;AAED,iBAAOA,GAAP;AACD,SARa,EAQXG,MARW,CAQJ,CAACX,qBAAqB,GAAG5D,aAAa,CAACwE,WAAvC,KAAuD,IAAvD,GAA8DZ,qBAA9D,GAAsF1K,eARlF,CAAd;AASA,YAAIkH,OAAO,GAAG8D,OAAO,CAACO,KAAK,CAACC,IAAN,CAAW;AAC/BnF,UAAAA,MAAM,EAAEsE,UAAU,CAAC7K,IAAX,CAAgB,UAAU2L,CAAV,EAAaC,CAAb,EAAgB;AACtC,mBAAOA,CAAC,CAACzB,MAAF,CAAS5D,MAAT,GAAkBoF,CAAC,CAACxB,MAAF,CAAS5D,MAAlC;AACD,WAFO,EAEL,CAFK,EAEF4D,MAFE,CAEK5D;AAHkB,SAAX,CAAD,CAArB;AAKAa,QAAAA,OAAO,CAACuD,OAAR,CAAgB,UAAUG,CAAV,EAAae,MAAb,EAAqB;AACnCf,UAAAA,CAAC,CAACH,OAAF,CAAU,UAAUmB,KAAV,EAAiB7E,CAAjB,EAAoB;AAC5B;AACA6E,YAAAA,KAAK,CAACnF,IAAN,GAAakE,UAAU,CAACgB,MAAD,CAAV,CAAmB1B,MAAnB,CAA0BlD,CAA1B,CAAb;AACA4D,YAAAA,UAAU,CAACgB,MAAD,CAAV,CAAmB1B,MAAnB,CAA0BlD,CAA1B,EAA6B8E,SAA7B,GAAyCD,KAAzC;AACD,WAJD;AAKD,SAND;AAOD,OA9BD;AA+BD;;AAED,WAAO3J,MAAP;AACD,GAzEY,EAyEV,CAACf,OAAO,CAACuF,IAAT,EAAeG,oBAAf,CAzEU,CAAb;AA0EA,MAAIV,WAAW,GAAGjG,KAAK,CAACuD,OAAN,CAAc,YAAY;AAC1C,WAAO9C,eAAe,CAAC,IAAD,EAAO4F,kBAAP,EAA2BrE,MAA3B,EAAmC6F,cAAnC,EAAmD1D,KAAnD,EAA0DC,MAA1D,CAAtB;AACD,GAFiB,EAEf,CAACyD,cAAD,EAAiBzD,MAAjB,EAAyBiC,kBAAzB,EAA6CrE,MAA7C,EAAqDmC,KAArD,CAFe,CAAlB;AAGA,MAAIgC,aAAa,GAAGnG,KAAK,CAACuD,OAAN,CAAc,YAAY;AAC5C,WAAOoD,oBAAoB,CAACC,GAArB,CAAyB,UAAUC,aAAV,EAAyB;AACvD,aAAOpG,eAAe,CAAC,KAAD,EAAQoG,aAAR,EAAuB7E,MAAvB,EAA+B6F,cAA/B,EAA+C1D,KAA/C,EAAsDC,MAAtD,CAAtB;AACD,KAFM,CAAP;AAGD,GAJmB,EAIjB,CAACyD,cAAD,EAAiBzD,MAAjB,EAAyBuC,oBAAzB,EAA+C3E,MAA/C,EAAuDmC,KAAvD,CAJiB,CAApB;AAKA,MAAI0H,QAAQ,GAAG7L,KAAK,CAACuD,OAAN,CAAc,YAAY;AACvC;AACA,QAAIuI,IAAI,GAAG7F,WAAW,CAAC8F,UAAZ,GAAyB,WAAzB,GAAuC,SAAlD;AACA,QAAIC,IAAI,GAAG/F,WAAW,CAAC8F,UAAZ,GAAyB,SAAzB,GAAqC,WAAhD;AACA,WAAO;AACLD,MAAAA,IAAI,EAAEA,IADD;AAELE,MAAAA,IAAI,EAAEA;AAFD,KAAP;AAID,GARc,EAQZ,CAAC/F,WAAD,CARY,CAAf;AASA,MAAIgG,aAAa,GAAGjM,KAAK,CAACuD,OAAN,CAAc,YAAY;AAC5C,QAAI0I,aAAa,GAAG,IAAIC,GAAJ,EAApB;AACA,QAAIC,SAAS,GAAGnK,MAAM,CAAC4E,GAAP,CAAW,UAAU+D,CAAV,EAAa;AACtC,aAAOA,CAAC,CAACX,MAAT;AACD,KAFe,EAEboC,IAFa,CAER,CAFQ,CAAhB;AAGAD,IAAAA,SAAS,CAAC3B,OAAV,CAAkB,UAAUmB,KAAV,EAAiB;AACjC,UAAIU,YAAY,GAAG,KAAKpG,WAAW,CAACiF,QAAZ,CAAqBS,KAAK,CAACzB,aAA3B,CAAxB;;AAEA,UAAI,CAAC+B,aAAa,CAACK,GAAd,CAAkBD,YAAlB,CAAL,EAAsC;AACpCJ,QAAAA,aAAa,CAACM,GAAd,CAAkBF,YAAlB,EAAgC,EAAhC;AACD;;AAEDJ,MAAAA,aAAa,CAACO,GAAd,CAAkBH,YAAlB,EAAgCI,IAAhC,CAAqCd,KAArC;AACD,KARD;AASAQ,IAAAA,SAAS,CAAC3B,OAAV,CAAkB,UAAUmB,KAAV,EAAiB;AACjC,UAAIU,YAAY,GAAG,KAAKpG,WAAW,CAACiF,QAAZ,CAAqBS,KAAK,CAACzB,aAA3B,CAAxB;AACAyB,MAAAA,KAAK,CAACe,KAAN,GAAcT,aAAa,CAACO,GAAd,CAAkBH,YAAlB,CAAd;AACD,KAHD;AAIA,WAAOJ,aAAP;AACD,GAnBmB,EAmBjB,CAAChG,WAAD,EAAcjE,MAAd,CAnBiB,CAApB;AAoBA,MAAI2K,oBAAoB,GAAG3M,KAAK,CAAC4M,WAAN,CAAkB,UAAU5K,MAAV,EAAkB4F,YAAlB,EAAgC;AAC3E,QAAIiF,qBAAJ,EAA2BC,sBAA3B,EAAmDC,WAAnD;;AAEA,QAAIC,IAAI,GAAG;AACTC,MAAAA,KAAK,EAAE7F,UAAU,GAAGjF,aAAb,CAA2BH,MAAM,CAACmI,KAAP,IAAgB/C,UAAU,GAAGjF,aAAb,CAA2BiE,MAA3B,GAAoC,CAApD,CAA3B;AADE,KAAX;AAGA,QAAI8G,MAAM,GAAG3M,eAAe,CAACyB,MAAD,EAAS4F,YAAT,CAA5B;AACA,QAAIuF,YAAY,GAAG,CAACN,qBAAqB,GAAG,CAACC,sBAAsB,GAAG,CAACC,WAAW,GAAG3F,UAAU,EAAzB,EAA6BgG,cAAvD,KAA0E,IAA1E,GAAiF,KAAK,CAAtF,GAA0FN,sBAAsB,CAACO,IAAvB,CAA4BN,WAA5B,EAAyC/K,MAAzC,EAAiDkL,MAAjD,CAAnH,KAAgL,IAAhL,GAAuLL,qBAAvL,GAA+M,EAAlO;AACA7K,IAAAA,MAAM,CAACc,KAAP,GAAexC,iBAAiB,CAAC6M,YAAD,EAAeH,IAAf,CAAhC;AACA,WAAOhL,MAAM,CAACc,KAAd;AACD,GAV0B,EAUxB,CAACsE,UAAD,CAVwB,CAA3B;AAWA,MAAIkG,mBAAmB,GAAGtN,KAAK,CAAC4M,WAAN,CAAkB,UAAUjB,KAAV,EAAiB/D,YAAjB,EAA+B;AACzE,QAAI2F,qBAAJ,EAA2BC,qBAA3B,EAAkDC,sBAAlD,EAA0EC,YAA1E;;AAEA,QAAIV,IAAI,GAAGtN,QAAQ,CAAC,EAAD,EAAK,CAAC6N,qBAAqB,GAAGvL,MAAM,CAAC2J,KAAK,CAACrC,WAAP,CAA/B,KAAuD,IAAvD,GAA8D,KAAK,CAAnE,GAAuEiE,qBAAqB,CAACzK,KAAlG,EAAyG;AAC1HmK,MAAAA,KAAK,EAAE7F,UAAU,GAAGjF,aAAb,CAA2BwJ,KAAK,CAACrC,WAAN,IAAqBlC,UAAU,GAAGjF,aAAb,CAA2BiE,MAA3B,GAAoC,CAAzD,CAA3B;AADmH,KAAzG,CAAnB;;AAIA,QAAI8G,MAAM,GAAG1M,cAAc,CAACmL,KAAD,EAAQ/D,YAAR,CAA3B;AACA,QAAIuF,YAAY,GAAG,CAACK,qBAAqB,GAAG,CAACC,sBAAsB,GAAG,CAACC,YAAY,GAAGtG,UAAU,EAA1B,EAA8BuG,aAAxD,KAA0E,IAA1E,GAAiF,KAAK,CAAtF,GAA0FF,sBAAsB,CAACJ,IAAvB,CAA4BK,YAA5B,EAA0C/B,KAA1C,EAAiDuB,MAAjD,CAAnH,KAAgL,IAAhL,GAAuLM,qBAAvL,GAA+M,EAAlO;AACA7B,IAAAA,KAAK,CAAC7I,KAAN,GAAcxC,iBAAiB,CAAC6M,YAAD,EAAeH,IAAf,CAA/B;AACA,WAAOrB,KAAK,CAAC7I,KAAb;AACD,GAXyB,EAWvB,CAACsE,UAAD,EAAapF,MAAb,CAXuB,CAA1B,CA3NyB,CAsOC;;AAE1B,MAAI4L,aAAa,GAAG5N,KAAK,CAACuD,OAAN,CAAc,YAAY;AAC5C,QAAIsK,cAAc,GAAG,GAAGC,MAAH,CAAU9L,MAAV,EAAkB+L,OAAlB,EAArB;AACA,WAAO3G,UAAU,GAAGrF,cAAb,CAA4B8L,cAA5B,CAAP;AACD,GAHmB,EAGjB,CAACzG,UAAD,EAAapF,MAAb,CAHiB,CAApB;AAIA9B,EAAAA,yBAAyB,CAAC,YAAY;AACpC,QAAIgH,MAAM,CAAC8G,OAAP,IAAkB9G,MAAM,CAAC8G,OAAP,CAAe3K,aAAjC,IAAkD,CAAC6D,MAAM,CAAC8G,OAAP,CAAe3K,aAAf,CAA6BP,KAA7B,CAAmC0B,QAA1F,EAAoG;AAClG0C,MAAAA,MAAM,CAAC8G,OAAP,CAAe3K,aAAf,CAA6BP,KAA7B,CAAmC0B,QAAnC,GAA8C,UAA9C;AACD;AACF,GAJwB,CAAzB;AAKA,MAAIyJ,YAAY,GAAG;AACjB7G,IAAAA,UAAU,EAAEA,UADK;AAEjBS,IAAAA,cAAc,EAAEA,cAFC;AAGjB5B,IAAAA,WAAW,EAAEA,WAHI;AAIjBE,IAAAA,aAAa,EAAEA,aAJE;AAKjB0F,IAAAA,QAAQ,EAAEA,QALO;AAMjB7J,IAAAA,MAAM,EAAEA,MANS;AAOjB4L,IAAAA,aAAa,EAAEA,aAPE;AAQjB3B,IAAAA,aAAa,EAAEA,aARE;AASjB9H,IAAAA,KAAK,EAAEA,KATU;AAUjBC,IAAAA,MAAM,EAAEA,MAVS;AAWjBuI,IAAAA,oBAAoB,EAAEA,oBAXL;AAYjBW,IAAAA,mBAAmB,EAAEA,mBAZJ;AAajBjG,IAAAA,mBAAmB,EAAEA,mBAbJ;AAcjBM,IAAAA,iBAAiB,EAAEA,iBAdF;AAejBT,IAAAA,MAAM,EAAEA;AAfS,GAAnB;AAiBA,MAAIgH,cAAc,GAAGlO,KAAK,CAACuD,OAAN,CAAc,YAAY;AAC7C,WAAO1D,IAAI,CAACD,MAAM,CAACgO,aAAD,EAAgB,UAAUrD,CAAV,EAAa;AAC7C,aAAOA,CAAC,CAACT,eAAT;AACD,KAFiB,CAAP,EAEP,UAAUqE,KAAV,EAAiB;AACnB,UAAIC,GAAG,GAAGD,KAAK,CAAC,CAAD,CAAf;AACA,aAAOhI,aAAa,CAACkI,SAAd,CAAwB,UAAUC,IAAV,EAAgB;AAC7C,eAAOA,IAAI,CAAC3E,EAAL,KAAYyE,GAAnB;AACD,OAFM,CAAP;AAGD,KAPU,CAAX;AAQD,GAToB,EASlB,CAACR,aAAD,EAAgBzH,aAAhB,CATkB,CAArB;AAUA,MAAIoI,aAAa,GAAG,CAACtN,OAAO,CAAC0M,aAAT,IAA0B,CAAC1M,OAAO,CAACmM,cAAvD,CA5QyB,CA4Q8C;;AAEvE,MAAIoB,aAAa,GAAG,SAASA,aAAT,GAAyB;AAC3C,WAAO;AACLvI,MAAAA,WAAW,EAAEA,WADR;AAELE,MAAAA,aAAa,EAAEA,aAFV;AAGL+H,MAAAA,cAAc,EAAEA;AAHX,KAAP;AAKD,GAND;;AAQA,MAAIO,qBAAqB,GAAGzO,KAAK,CAAC4M,WAAN,CAAkB,YAAY;AACxD,WAAO;AACL3G,MAAAA,WAAW,EAAEA,WADR;AAELE,MAAAA,aAAa,EAAEA,aAFV;AAGL+H,MAAAA,cAAc,EAAEA;AAHX,KAAP;AAKD,GAN2B,EAMzB,CAACjI,WAAD,EAAcE,aAAd,EAA6B+H,cAA7B,CANyB,CAA5B;;AAQA,MAAIK,aAAJ,EAAmB;AACjBC,IAAAA,aAAa,GAAGC,qBAAhB;AACD;;AAED,MAAIC,QAAQ,GAAG1O,KAAK,CAACuD,OAAN,CAAc,YAAY;AACvC,QAAIoL,cAAc,GAAGH,aAAa,EAAlC;AAAA,QACIvI,WAAW,GAAG0I,cAAc,CAAC1I,WADjC;AAAA,QAEIE,aAAa,GAAGwI,cAAc,CAACxI,aAFnC;AAAA,QAGI+H,cAAc,GAAGS,cAAc,CAACT,cAHpC;;AAKA,WAAOA,cAAc,CAACtH,GAAf,CAAmB,UAAUgI,KAAV,EAAiB;AACzC,UAAIC,MAAM,GAAGD,KAAK,CAAC,CAAD,CAAlB;AAAA,UACI5M,MAAM,GAAG4M,KAAK,CAAC,CAAD,CADlB;AAEA,UAAI/H,aAAa,GAAGV,aAAa,CAAC2I,IAAd,CAAmB,UAAUvE,CAAV,EAAa;AAClD,eAAOA,CAAC,CAACZ,EAAF,KAASkF,MAAhB;AACD,OAFmB,CAApB;;AAIA,UAAI,CAAChI,aAAL,EAAoB;AAClB,eAAO,IAAP;AACD;;AAED,UAAIE,WAAW,GAAGF,aAAa,CAACE,WAAhC;;AAEA,UAAIgI,SAAS,GAAG,YAAY;AAC1B,YAAIhI,WAAW,KAAK,MAApB,EAA4B;AAC1B,iBAAO1G,IAAP;AACD;;AAED,YAAI0G,WAAW,KAAK,KAApB,EAA2B;AACzB,iBAAO3G,GAAP;AACD;;AAED,YAAI2G,WAAW,KAAK,MAApB,EAA4B;AAC1B,iBAAO5G,IAAP;AACD;;AAED,cAAM,IAAI+F,KAAJ,CAAU,qBAAV,CAAN;AACD,OAde,EAAhB;;AAgBA,aAAO,aAAalG,KAAK,CAAC4F,aAAN,CAAoBmJ,SAApB,EAA+B;AACjDX,QAAAA,GAAG,EAAES,MAAM,IAAI,IAAV,GAAiBA,MAAjB,GAA0B,aADkB;AAEjD5I,QAAAA,WAAW,EAAEA,WAFoC;AAGjDY,QAAAA,aAAa,EAAEA,aAHkC;AAIjD7E,QAAAA,MAAM,EAAEA;AAJyC,OAA/B,CAApB;AAMD,KAnCM,CAAP;AAoCD,GA1Cc,EA0CZ,CAACwM,aAAD,CA1CY,CAAf;AA2CA,SAAO,aAAaxO,KAAK,CAAC4F,aAAN,CAAoBlF,oBAApB,EAA0C;AAC5D+E,IAAAA,KAAK,EAAExF,YAAY,CAACgO,YAAD;AADyC,GAA1C,EAEjB,aAAajO,KAAK,CAAC4F,aAAN,CAAoB,KAApB,EAA2B;AACzC9C,IAAAA,KAAK,EAAE;AACLkM,MAAAA,UAAU,EAAE;AADP;AADkC,GAA3B,EAIb,aAAahP,KAAK,CAAC4F,aAAN,CAAoB,KAApB,EAA2B;AACzCC,IAAAA,GAAG,EAAEqB,MADoC;AAEzCpE,IAAAA,KAAK,EAAE;AACLqB,MAAAA,KAAK,EAAEA,KADF;AAELC,MAAAA,MAAM,EAAEA,MAFH;AAGLJ,MAAAA,QAAQ,EAAE/C,OAAO,CAACgO,KAAR,GAAgB,QAAhB,GAA2B;AAHhC,KAFkC;AAOzCC,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,CAAjB,EAAoB;AAC3B,aAAOlO,OAAO,CAACmO,YAAR,IAAwB,IAAxB,GAA+B,KAAK,CAApC,GAAwCnO,OAAO,CAACmO,YAAR,CAAqBxH,YAArB,EAAmCuH,CAAnC,CAA/C;AACD;AATwC,GAA3B,EAUb,aAAanP,KAAK,CAAC4F,aAAN,CAAoB,GAApB,EAAyB;AACvChD,IAAAA,SAAS,EAAE,QAD4B;AAEvCE,IAAAA,KAAK,EAAE;AACLuM,MAAAA,aAAa,EAAE;AADV;AAFgC,GAAzB,EAKbX,QALa,CAVA,EAeF,aAAa1O,KAAK,CAAC4F,aAAN,CAAoB,GAApB,EAAyB;AAClDhD,IAAAA,SAAS,EAAE;AADuC,GAAzB,EAExB,CAACqD,WAAD,EAAc6H,MAAd,CAAqB3H,aAArB,EAAoCS,GAApC,CAAwC,UAAU0H,IAAV,EAAgB;AACzD,WAAO,aAAatO,KAAK,CAAC4F,aAAN,CAAoBjF,UAApB,EAAgCjB,QAAQ,CAAC;AAC3D0O,MAAAA,GAAG,EAAE,CAACE,IAAI,CAAC9J,QAAN,EAAgB8J,IAAI,CAAC3E,EAArB,EAAyB2F,IAAzB,CAA8B,EAA9B;AADsD,KAAD,EAEzDhB,IAFyD,CAAxC,CAApB;AAGD,GAJE,CAFwB,CAfX,EAqBX,aAAatO,KAAK,CAAC4F,aAAN,CAAoB9E,OAApB,EAA6B,IAA7B,CArBF,EAqBsC,CAACkF,kBAAkB,GAAG/E,OAAO,CAACsO,SAAR,IAAqB,IAArB,GAA4B,KAAK,CAAjC,GAAqCtO,OAAO,CAACsO,SAAR,EAA3D,KAAmF,IAAnF,GAA0FvJ,kBAA1F,GAA+G,IArBrJ,CAJA,EAyB4J,aAAahG,KAAK,CAAC4F,aAAN,CAAoBhF,OAApB,EAA6B,IAA7B,CAzBzK,EAyB6M,aAAaZ,KAAK,CAAC4F,aAAN,CAAoB/E,OAApB,EAA6B,IAA7B,CAzB1N,CAFI,CAApB;AA4BD;;AAED,SAASmH,yBAAT,CAAmCN,cAAnC,EAAmD8H,IAAnD,EAAyD;AACvD,MAAIC,GAAG,GAAG,CAAV;AACA5E,EAAAA,MAAM,CAACC,IAAP,CAAYpD,cAAZ,EAA4B8C,OAA5B,CAAoC,UAAUqE,MAAV,EAAkB;AACpD,QAAIa,qBAAJ;;AAEAD,IAAAA,GAAG,IAAI,CAAC,CAACC,qBAAqB,GAAGhI,cAAc,CAACmH,MAAD,CAAvC,KAAoD,IAApD,GAA2D,KAAK,CAAhE,GAAoEa,qBAAqB,CAACF,IAAD,CAA1F,KAAqG,CAA5G;AACD,GAJD;AAKA,SAAOC,GAAP;AACD;;AAED,SAASlJ,oBAAT,CAA8BtF,OAA9B,EAAuCuF,IAAvC,EAA6C;AAC3C,MAAImJ,iBAAJ;AACAnJ,EAAAA,IAAI,CAAC4D,IAAL,CAAU,UAAUwF,KAAV,EAAiB;AACzB,WAAOA,KAAK,CAACpJ,IAAN,CAAW4D,IAAX,CAAgB,UAAUF,aAAV,EAAyB;AAC9C,UAAIzE,KAAK,GAAGxE,OAAO,CAACiK,QAAR,CAAiBhB,aAAjB,CAAZ;;AAEA,UAAIzE,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,WAAvC,EAAoD;AAClDkK,QAAAA,iBAAiB,GAAGlK,KAApB;AACA,eAAO,IAAP;AACD;AACF,KAPM,CAAP;AAQD,GATD;AAUA,SAAOkK,iBAAP;AACD;;AAED,SAASjJ,wBAAT,CAAkCzF,OAAlC,EAA2CqF,UAA3C,EAAuD;AACrD,MAAIU,SAAS,GAAG/F,OAAO,CAAC+F,SAAxB;;AAEA,MAAI,CAAC/F,OAAO,CAAC+F,SAAb,EAAwB;AACtB,QAAI,OAAOV,UAAP,KAAsB,QAA1B,EAAoC;AAClCU,MAAAA,SAAS,GAAG,QAAZ;AACD,KAFD,MAEO,IAAI,QAAQV,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,CAACuJ,QAAjD,MAA+D,UAAnE,EAA+E;AACpF7I,MAAAA,SAAS,GAAG,MAAZ;AACD,KAFM,MAEA,IAAI,OAAOV,UAAP,KAAsB,QAAtB,IAAkC,OAAOA,UAAP,KAAsB,SAA5D,EAAuE;AAC5EU,MAAAA,SAAS,GAAG,MAAZ;AACD,KAFM,MAEA;AACL,YAAM,IAAId,KAAJ,CAAU,oDAAV,CAAN;AACD;AACF;;AAED,SAAOxG,QAAQ,CAAC,EAAD,EAAKuB,OAAL,EAAc;AAC3B+F,IAAAA,SAAS,EAAEA;AADgB,GAAd,CAAf;AAGD","sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/esm/createForOfIteratorHelperLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"options\", \"className\", \"style\"];\nimport { groups, sort } from 'd3-array';\nimport { stack, stackOffsetNone } from 'd3-shape';\nimport React from 'react';\nimport useGetLatest from '../hooks/useGetLatest';\nimport useIsomorphicLayoutEffect from '../hooks/useIsomorphicLayoutEffect';\nimport Area from '../seriesTypes/Area';\nimport Bar from '../seriesTypes/Bar';\nimport Line from '../seriesTypes/Line'; //\n\nimport { materializeStyles, getSeriesStatus, getDatumStatus } from '../utils/Utils';\nimport buildAxisLinear from '../utils/buildAxis.linear';\nimport { ChartContextProvider } from '../utils/chartContext';\nimport AxisLinear from './AxisLinear'; // import Brush from './Brush'\n\nimport Cursors from './Cursors';\nimport Tooltip from './Tooltip';\nimport Voronoi from './Voronoi'; //\n//\n\nvar defaultColorScheme = ['#0f83ab', '#faa43a', '#ff4e4e', '#53cfc9', '#a2d925', '#decf3f', '#734fe9', '#cd82ad', '#006d92', '#de7c00', '#f33232', '#3f9a80', '#53c200', '#d7af00', '#4c26c9', '#d44d99'];\n\nfunction defaultChartOptions(options) {\n  var _options$initialWidth, _options$initialHeigh, _options$getSeriesOrd, _options$groupingMode, _options$showVoronoi, _options$defaultColor, _options$useIntersect, _options$intersection, _options$tooltip, _options$primaryCurso, _options$secondaryCur;\n\n  return _extends({}, options, {\n    initialWidth: (_options$initialWidth = options.initialWidth) != null ? _options$initialWidth : 300,\n    initialHeight: (_options$initialHeigh = options.initialHeight) != null ? _options$initialHeigh : 200,\n    getSeriesOrder: (_options$getSeriesOrd = options.getSeriesOrder) != null ? _options$getSeriesOrd : function (series) {\n      return series;\n    },\n    groupingMode: (_options$groupingMode = options.groupingMode) != null ? _options$groupingMode : 'primary',\n    showVoronoi: (_options$showVoronoi = options.showVoronoi) != null ? _options$showVoronoi : false,\n    defaultColors: (_options$defaultColor = options.defaultColors) != null ? _options$defaultColor : defaultColorScheme,\n    useIntersectionObserver: (_options$useIntersect = options.useIntersectionObserver) != null ? _options$useIntersect : true,\n    intersectionObserverRootMargin: (_options$intersection = options.intersectionObserverRootMargin) != null ? _options$intersection : '1000px',\n    tooltip: (_options$tooltip = options.tooltip) != null ? _options$tooltip : true,\n    primaryCursor: (_options$primaryCurso = options.primaryCursor) != null ? _options$primaryCurso : true,\n    secondaryCursor: (_options$secondaryCur = options.secondaryCursor) != null ? _options$secondaryCur : true\n  });\n}\n\nexport function Chart(_ref) {\n  var userOptions = _ref.options,\n      className = _ref.className,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var options = defaultChartOptions(userOptions);\n\n  var _React$useState = React.useState(null),\n      chartElement = _React$useState[0],\n      setContainerElement = _React$useState[1];\n\n  var containerEl = chartElement == null ? void 0 : chartElement.parentElement;\n  var nearestScrollableParent = React.useMemo(function () {\n    var run = function run(el) {\n      if (!el) {\n        return null;\n      }\n\n      var grandParent = el.parentElement;\n\n      if (!grandParent) {\n        return null;\n      }\n\n      if (grandParent.scrollHeight > grandParent.clientHeight) {\n        var _window$getComputedSt = window.getComputedStyle(grandParent),\n            overflow = _window$getComputedSt.overflow;\n\n        if (overflow.includes('scroll') || overflow.includes('auto')) {\n          return grandParent;\n        }\n      }\n\n      return run(grandParent);\n    };\n\n    return run(containerEl);\n  }, [containerEl]);\n\n  var _React$useState2 = React.useState({\n    width: options.initialWidth,\n    height: options.initialHeight\n  }),\n      _React$useState2$ = _React$useState2[0],\n      width = _React$useState2$.width,\n      height = _React$useState2$.height,\n      setDims = _React$useState2[1];\n\n  useIsomorphicLayoutEffect(function () {\n    if (containerEl) {\n      var computed = window.getComputedStyle(containerEl);\n\n      if (!['relative', 'absolute', 'fixed'].includes(computed.position)) {\n        containerEl.style.position = 'relative';\n      }\n    }\n  }, [containerEl]);\n  React.useEffect(function () {\n    if (!containerEl) {\n      return;\n    }\n\n    var observer = new ResizeObserver(function () {\n      var rect = containerEl == null ? void 0 : containerEl.getBoundingClientRect();\n\n      if (rect) {\n        setDims({\n          width: rect.width,\n          height: rect.height\n        });\n      }\n    });\n    observer.observe(containerEl);\n    return function () {\n      observer.unobserve(containerEl);\n    };\n  }, [containerEl]);\n\n  var _React$useState3 = React.useState(true),\n      isIntersecting = _React$useState3[0],\n      setIsIntersecting = _React$useState3[1];\n\n  React.useEffect(function () {\n    if (!containerEl || !options.useIntersectionObserver) return;\n    var observer = new IntersectionObserver(function (entries) {\n      for (var _iterator = _createForOfIteratorHelperLoose(entries), _step; !(_step = _iterator()).done;) {\n        var entry = _step.value;\n\n        if (entry.isIntersecting) {\n          setIsIntersecting(true);\n        } else {\n          setIsIntersecting(false);\n        }\n      }\n    }, {\n      root: nearestScrollableParent,\n      rootMargin: options.intersectionObserverRootMargin\n    });\n    observer.observe(containerEl);\n    return function () {\n      observer.unobserve(containerEl);\n    };\n  }, [containerEl, nearestScrollableParent, options.intersectionObserverRootMargin, options.useIntersectionObserver]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: setContainerElement\n  }, rest, {\n    className: \"ReactChart \" + (className || ''),\n    style: _extends({}, style, {\n      position: 'absolute',\n      width: width,\n      height: height\n    })\n  }), isIntersecting ? /*#__PURE__*/React.createElement(ChartInner, {\n    options: options,\n    width: width,\n    height: height\n  }) : null);\n}\n\nfunction ChartInner(_ref2) {\n  var _options$renderSVG;\n\n  var options = _ref2.options,\n      width = _ref2.width,\n      height = _ref2.height;\n\n  if (!options.primaryAxis) {\n    throw new Error('A primaryAxis is required');\n  }\n\n  if (!options.secondaryAxes.length) {\n    throw new Error('At least one secondaryAxis is required');\n  }\n\n  var primaryAxisOptions = React.useMemo(function () {\n    var firstValue = getFirstDefinedValue(options.primaryAxis, options.data);\n    var optionsWithScaleType = axisOptionsWithScaleType(options.primaryAxis, firstValue);\n    return _extends({\n      position: 'bottom'\n    }, optionsWithScaleType);\n  }, [options.data, options.primaryAxis]);\n  var secondaryAxesOptions = React.useMemo(function () {\n    return options.secondaryAxes.map(function (secondaryAxis, i) {\n      var firstValue = getFirstDefinedValue(secondaryAxis, options.data);\n      var optionsWithScaleType = axisOptionsWithScaleType(secondaryAxis, firstValue);\n\n      if (!optionsWithScaleType.elementType) {\n        if (primaryAxisOptions.scaleType === 'band') {\n          optionsWithScaleType.elementType = 'bar';\n        } else if (optionsWithScaleType.stacked) {\n          optionsWithScaleType.elementType = 'area';\n        }\n      }\n\n      if (typeof optionsWithScaleType.stacked === 'undefined' && optionsWithScaleType.elementType && ['bar', 'area'].includes(optionsWithScaleType.elementType)) {\n        optionsWithScaleType.stacked = true;\n      }\n\n      return _extends({\n        position: !i ? 'left' : 'right'\n      }, optionsWithScaleType);\n    });\n  }, [options.data, options.secondaryAxes, primaryAxisOptions]);\n  var svgRef = React.useRef(null);\n  var getOptions = useGetLatest(options);\n  var axisDimensionsState = React.useState({\n    left: {},\n    right: {},\n    top: {},\n    bottom: {}\n  });\n  var axisDimensions = axisDimensionsState[0];\n  var focusedDatumState = React.useState(null);\n  var focusedDatum = focusedDatumState[0]; // useAtom<Datum<TDatum> | null>(focusedDatumAtom)\n\n  var gridDimensions = React.useMemo(function () {\n    // Left\n    var _map = ['width', 'top', 'bottom'].map(function (prop) {\n      return sumAllDimensionProperties(axisDimensions.left, prop);\n    }),\n        axesLeftWidth = _map[0],\n        axesLeftTop = _map[1],\n        axesLeftBottom = _map[2];\n\n    var _map2 = ['width', 'top', 'bottom'].map(function (prop) {\n      return sumAllDimensionProperties(axisDimensions.right, prop);\n    }),\n        axesRightWidth = _map2[0],\n        axesRightTop = _map2[1],\n        axesRightBottom = _map2[2];\n\n    var _map3 = ['height', 'left', 'right'].map(function (prop) {\n      return sumAllDimensionProperties(axisDimensions.top, prop);\n    }),\n        axesTopHeight = _map3[0],\n        axesTopLeft = _map3[1],\n        axesTopRight = _map3[2];\n\n    var _map4 = ['height', 'left', 'right'].map(function (prop) {\n      return sumAllDimensionProperties(axisDimensions.bottom, prop);\n    }),\n        axesBottomHeight = _map4[0],\n        axesBottomLeft = _map4[1],\n        axesBottomRight = _map4[2];\n\n    var gridX = Math.max(axesLeftWidth, axesTopLeft, axesBottomLeft);\n    var gridY = Math.max(axesTopHeight, axesLeftTop, axesRightTop);\n    var gridWidth = Math.max(0, width - Math.max(axesLeftWidth, axesTopLeft, axesBottomLeft) - Math.max(axesRightWidth, axesTopRight, axesBottomRight));\n    var gridHeight = Math.max(0, height - Math.max(axesTopHeight, axesLeftTop, axesRightTop) - Math.max(axesBottomHeight, axesLeftBottom, axesRightBottom));\n    return {\n      gridX: gridX,\n      gridY: gridY,\n      gridWidth: gridWidth,\n      gridHeight: gridHeight\n    };\n  }, [width, height, axisDimensions]);\n  var series = React.useMemo(function () {\n    var series = [];\n\n    for (var seriesIndex = 0; seriesIndex < options.data.length; seriesIndex++) {\n      var _originalSeries$id, _originalSeries$label;\n\n      var originalSeries = options.data[seriesIndex];\n      var seriesId = (_originalSeries$id = originalSeries.id) != null ? _originalSeries$id : seriesIndex + '';\n      var seriesLabel = (_originalSeries$label = originalSeries.label) != null ? _originalSeries$label : \"Series \" + (seriesIndex + 1);\n      var secondaryAxisId = originalSeries.secondaryAxisId;\n      var originalDatums = originalSeries.data;\n      var datums = [];\n\n      for (var datumIndex = 0; datumIndex < originalDatums.length; datumIndex++) {\n        var originalDatum = originalDatums[datumIndex];\n        datums[datumIndex] = {\n          originalSeries: originalSeries,\n          seriesIndex: seriesIndex,\n          seriesId: seriesId,\n          seriesLabel: seriesLabel,\n          secondaryAxisId: secondaryAxisId,\n          index: datumIndex,\n          originalDatum: originalDatum\n        };\n      }\n\n      series[seriesIndex] = {\n        originalSeries: originalSeries,\n        index: seriesIndex,\n        id: seriesId,\n        label: seriesLabel,\n        secondaryAxisId: secondaryAxisId,\n        datums: datums\n      };\n    }\n\n    if (secondaryAxesOptions.some(function (axisOptions) {\n      return axisOptions.stacked;\n    })) {\n      secondaryAxesOptions.filter(function (d) {\n        return d.stacked;\n      }).forEach(function (secondaryAxis) {\n        var _secondaryAxis$stackO;\n\n        var axisSeries = series.filter(function (s) {\n          return s.secondaryAxisId === secondaryAxis.id;\n        });\n        var seriesIndices = Object.keys(axisSeries);\n        var stacker = stack().keys(seriesIndices).value(function (_, seriesIndex, index) {\n          var val = secondaryAxis.getValue(axisSeries[Number(seriesIndex)].datums[index].originalDatum);\n\n          if (typeof val === 'undefined' || val === null) {\n            return 0;\n          }\n\n          return val;\n        }).offset((_secondaryAxis$stackO = secondaryAxis.stackOffset) != null ? _secondaryAxis$stackO : stackOffsetNone);\n        var stacked = stacker(Array.from({\n          length: axisSeries.sort(function (a, b) {\n            return b.datums.length - a.datums.length;\n          })[0].datums.length\n        }));\n        stacked.forEach(function (s, sIndex) {\n          s.forEach(function (datum, i) {\n            // @ts-ignore\n            datum.data = axisSeries[sIndex].datums[i];\n            axisSeries[sIndex].datums[i].stackData = datum;\n          });\n        });\n      });\n    }\n\n    return series;\n  }, [options.data, secondaryAxesOptions]);\n  var primaryAxis = React.useMemo(function () {\n    return buildAxisLinear(true, primaryAxisOptions, series, gridDimensions, width, height);\n  }, [gridDimensions, height, primaryAxisOptions, series, width]);\n  var secondaryAxes = React.useMemo(function () {\n    return secondaryAxesOptions.map(function (secondaryAxis) {\n      return buildAxisLinear(false, secondaryAxis, series, gridDimensions, width, height);\n    });\n  }, [gridDimensions, height, secondaryAxesOptions, series, width]);\n  var axesInfo = React.useMemo(function () {\n    // Make sure we're mapping x and y to the correct axes\n    var xKey = primaryAxis.isVertical ? 'secondary' : 'primary';\n    var yKey = primaryAxis.isVertical ? 'primary' : 'secondary';\n    return {\n      xKey: xKey,\n      yKey: yKey\n    };\n  }, [primaryAxis]);\n  var groupedDatums = React.useMemo(function () {\n    var groupedDatums = new Map();\n    var allDatums = series.map(function (s) {\n      return s.datums;\n    }).flat(2);\n    allDatums.forEach(function (datum) {\n      var primaryValue = \"\" + primaryAxis.getValue(datum.originalDatum);\n\n      if (!groupedDatums.has(primaryValue)) {\n        groupedDatums.set(primaryValue, []);\n      }\n\n      groupedDatums.get(primaryValue).push(datum);\n    });\n    allDatums.forEach(function (datum) {\n      var primaryValue = \"\" + primaryAxis.getValue(datum.originalDatum);\n      datum.group = groupedDatums.get(primaryValue);\n    });\n    return groupedDatums;\n  }, [primaryAxis, series]);\n  var getSeriesStatusStyle = React.useCallback(function (series, focusedDatum) {\n    var _getOptions$getSeries, _getOptions$getSeries2, _getOptions;\n\n    var base = {\n      color: getOptions().defaultColors[series.index % (getOptions().defaultColors.length - 1)]\n    };\n    var status = getSeriesStatus(series, focusedDatum);\n    var statusStyles = (_getOptions$getSeries = (_getOptions$getSeries2 = (_getOptions = getOptions()).getSeriesStyle) == null ? void 0 : _getOptions$getSeries2.call(_getOptions, series, status)) != null ? _getOptions$getSeries : {};\n    series.style = materializeStyles(statusStyles, base);\n    return series.style;\n  }, [getOptions]);\n  var getDatumStatusStyle = React.useCallback(function (datum, focusedDatum) {\n    var _series$datum$seriesI, _getOptions$getDatumS, _getOptions$getDatumS2, _getOptions2;\n\n    var base = _extends({}, (_series$datum$seriesI = series[datum.seriesIndex]) == null ? void 0 : _series$datum$seriesI.style, {\n      color: getOptions().defaultColors[datum.seriesIndex % (getOptions().defaultColors.length - 1)]\n    });\n\n    var status = getDatumStatus(datum, focusedDatum);\n    var statusStyles = (_getOptions$getDatumS = (_getOptions$getDatumS2 = (_getOptions2 = getOptions()).getDatumStyle) == null ? void 0 : _getOptions$getDatumS2.call(_getOptions2, datum, status)) != null ? _getOptions$getDatumS : {};\n    datum.style = materializeStyles(statusStyles, base);\n    return datum.style;\n  }, [getOptions, series]); // Reverse the stack order for proper z-indexing\n\n  var orderedSeries = React.useMemo(function () {\n    var reversedSeries = [].concat(series).reverse();\n    return getOptions().getSeriesOrder(reversedSeries);\n  }, [getOptions, series]);\n  useIsomorphicLayoutEffect(function () {\n    if (svgRef.current && svgRef.current.parentElement && !svgRef.current.parentElement.style.position) {\n      svgRef.current.parentElement.style.position = 'relative';\n    }\n  });\n  var contextValue = {\n    getOptions: getOptions,\n    gridDimensions: gridDimensions,\n    primaryAxis: primaryAxis,\n    secondaryAxes: secondaryAxes,\n    axesInfo: axesInfo,\n    series: series,\n    orderedSeries: orderedSeries,\n    groupedDatums: groupedDatums,\n    width: width,\n    height: height,\n    getSeriesStatusStyle: getSeriesStatusStyle,\n    getDatumStatusStyle: getDatumStatusStyle,\n    axisDimensionsState: axisDimensionsState,\n    focusedDatumState: focusedDatumState,\n    svgRef: svgRef\n  };\n  var seriesByAxisId = React.useMemo(function () {\n    return sort(groups(orderedSeries, function (d) {\n      return d.secondaryAxisId;\n    }), function (_ref3) {\n      var key = _ref3[0];\n      return secondaryAxes.findIndex(function (axis) {\n        return axis.id === key;\n      });\n    });\n  }, [orderedSeries, secondaryAxes]);\n  var memoizeSeries = !options.getDatumStyle && !options.getSeriesStyle; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  var getSeriesInfo = function getSeriesInfo() {\n    return {\n      primaryAxis: primaryAxis,\n      secondaryAxes: secondaryAxes,\n      seriesByAxisId: seriesByAxisId\n    };\n  };\n\n  var getMemoizedSeriesInfo = React.useCallback(function () {\n    return {\n      primaryAxis: primaryAxis,\n      secondaryAxes: secondaryAxes,\n      seriesByAxisId: seriesByAxisId\n    };\n  }, [primaryAxis, secondaryAxes, seriesByAxisId]);\n\n  if (memoizeSeries) {\n    getSeriesInfo = getMemoizedSeriesInfo;\n  }\n\n  var seriesEl = React.useMemo(function () {\n    var _getSeriesInfo = getSeriesInfo(),\n        primaryAxis = _getSeriesInfo.primaryAxis,\n        secondaryAxes = _getSeriesInfo.secondaryAxes,\n        seriesByAxisId = _getSeriesInfo.seriesByAxisId;\n\n    return seriesByAxisId.map(function (_ref4) {\n      var axisId = _ref4[0],\n          series = _ref4[1];\n      var secondaryAxis = secondaryAxes.find(function (d) {\n        return d.id === axisId;\n      });\n\n      if (!secondaryAxis) {\n        return null;\n      }\n\n      var elementType = secondaryAxis.elementType;\n\n      var Component = function () {\n        if (elementType === 'line') {\n          return Line;\n        }\n\n        if (elementType === 'bar') {\n          return Bar;\n        }\n\n        if (elementType === 'area') {\n          return Area;\n        }\n\n        throw new Error('Invalid elementType');\n      }();\n\n      return /*#__PURE__*/React.createElement(Component, {\n        key: axisId != null ? axisId : '__default__',\n        primaryAxis: primaryAxis,\n        secondaryAxis: secondaryAxis,\n        series: series\n      });\n    });\n  }, [getSeriesInfo]);\n  return /*#__PURE__*/React.createElement(ChartContextProvider, {\n    value: useGetLatest(contextValue)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'sans-serif'\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef,\n    style: {\n      width: width,\n      height: height,\n      overflow: options.brush ? 'hidden' : 'visible'\n    },\n    onClick: function onClick(e) {\n      return options.onClickDatum == null ? void 0 : options.onClickDatum(focusedDatum, e);\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"Series\",\n    style: {\n      pointerEvents: 'none'\n    }\n  }, seriesEl), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"axes\"\n  }, [primaryAxis].concat(secondaryAxes).map(function (axis) {\n    return /*#__PURE__*/React.createElement(AxisLinear, _extends({\n      key: [axis.position, axis.id].join('')\n    }, axis));\n  })), /*#__PURE__*/React.createElement(Voronoi, null), (_options$renderSVG = options.renderSVG == null ? void 0 : options.renderSVG()) != null ? _options$renderSVG : null), /*#__PURE__*/React.createElement(Cursors, null), /*#__PURE__*/React.createElement(Tooltip, null)));\n}\n\nfunction sumAllDimensionProperties(axisDimensions, side) {\n  var sum = 0;\n  Object.keys(axisDimensions).forEach(function (axisId) {\n    var _axisDimensions$axisI;\n\n    sum += ((_axisDimensions$axisI = axisDimensions[axisId]) == null ? void 0 : _axisDimensions$axisI[side]) || 0;\n  });\n  return sum;\n}\n\nfunction getFirstDefinedValue(options, data) {\n  var firstDefinedValue;\n  data.some(function (serie) {\n    return serie.data.some(function (originalDatum) {\n      var value = options.getValue(originalDatum);\n\n      if (value !== null && typeof value !== 'undefined') {\n        firstDefinedValue = value;\n        return true;\n      }\n    });\n  });\n  return firstDefinedValue;\n}\n\nfunction axisOptionsWithScaleType(options, firstValue) {\n  var scaleType = options.scaleType;\n\n  if (!options.scaleType) {\n    if (typeof firstValue === 'number') {\n      scaleType = 'linear';\n    } else if (typeof (firstValue == null ? void 0 : firstValue.getMonth) === 'function') {\n      scaleType = 'time';\n    } else if (typeof firstValue === 'string' || typeof firstValue === 'boolean') {\n      scaleType = 'band';\n    } else {\n      throw new Error('Invalid scale type: Unable to infer type from data');\n    }\n  }\n\n  return _extends({}, options, {\n    scaleType: scaleType\n  });\n}"]},"metadata":{},"sourceType":"module"}