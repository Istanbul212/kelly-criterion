{"ast":null,"code":"var _jsxFileName = \"/Users/samerkadih/Desktop/Coding/Personal/React/kelly-criterion/src/pages/Game.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Game.module.css\";\nimport Graph from \"../components/Graph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction Game() {\n  _s();\n\n  const [score, setScore] = useState(100);\n  const [kellyScore, setKellyScore] = useState(100);\n  const [text, setText] = useState(\"\");\n  const [lowerB, setLowerB] = useState(0);\n  const [upperB, setUpperB] = useState(0);\n  const [questionBounds, setQuestionBounds] = useState(0);\n  const [questionType, setQuestionType] = useState(() => {\n    let qT = getRandomInt(0, 3);\n\n    if (qT === 0) {\n      let lowQB = getRandomInt(1, 51);\n      let upperQB = getRandomInt(51, 101);\n      setQuestionBounds([lowQB, upperQB]);\n      setLowerB(getRandomInt(lowQB, (lowQB + upperQB) / 2));\n      setUpperB(getRandomInt((lowQB + upperQB) / 2, upperQB));\n    } else if (qT === 1) {\n      setQuestionBounds(getRandomInt(1, 2));\n    } else {\n      setQuestionBounds(getRandomInt(1, 3));\n    }\n\n    return qT;\n  });\n  const {\n    difficulty,\n    time\n  } = useParams();\n  const [round, setRound] = useState(1);\n  const [timer, setTimer] = useState(time);\n  const [scoreHistory, setScoreHistory] = useState([[0, 100]]);\n  const [kellyScoreHistory, setKellyScoreHistory] = useState([[0, 100]]);\n  let roundInterval;\n  useEffect(() => {\n    roundInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      }\n\n      if (timer === 0) {\n        handleRound();\n      }\n    }, 1000);\n    return () => {\n      clearInterval(roundInterval);\n    };\n  }, [timer]);\n\n  const redistributeWealth = () => {\n    if (questionType === 0) {} else if (questionType === 1) {} else {}\n  };\n\n  const handleRound = () => {\n    if (round <= Math.floor(300 / time)) {\n      setTimer(time);\n      setScoreHistory([...scoreHistory, [round, score]]);\n      setKellyScoreHistory([...kellyScoreHistory, [round, kellyScore]]);\n      setRound(round + 1);\n      setQuestionType(() => {\n        let qT = getRandomInt(0, 3);\n        setQuestionBounds(() => {\n          if (qT === 0) {\n            return [getRandomInt(1, 51), getRandomInt(51, 101)];\n          } else if (qT === 1) {\n            return getRandomInt(1, 2);\n          } else {\n            return getRandomInt(1, 3);\n          }\n        });\n        return qT;\n      });\n      setText(\"\");\n      console.log(\"next round\");\n    }\n  };\n\n  const ensureValidInput = e => {\n    const re = /^[0-9]+$/;\n\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setText(e.target.value);\n    }\n  };\n\n  const checkUserInput = e => {\n    if (e.key === \"Enter\" && text !== \"\") {\n      handleRound();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [(() => {\n      if (round <= Math.floor(300 / time)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.remaining,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.round,\n            children: [\"Round: \", round]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.timer,\n            children: [\"Time: \", timer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.remaining,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this);\n    })(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.question,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.questionType,\n        children: (() => {\n          if (questionType === 0) {\n            return \"Uniform Random Variable between \" + questionBounds[0] + \" and \" + questionBounds[1];\n          } else if (questionType === 1) {\n            return \"Rolling \" + questionBounds + (questionBounds === 1 ? \" die\" : \" dice\");\n          } else {\n            return \"Flipping \" + questionBounds + (questionBounds === 1 ? \" quarter\" : \" quarters\");\n          }\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.odds,\n        children: \"W/L Odds: 20%, 100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.questionText,\n        children: \"This is the question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.terminal,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.score,\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onKeyDown: checkUserInput,\n        onChange: ensureValidInput,\n        placeholder: \"Bet amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.score,\n        children: kellyScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.results,\n      children: /*#__PURE__*/_jsxDEV(Graph, {\n        history: scoreHistory,\n        kellyHistory: kellyScoreHistory\n      }, round, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"ORR5roX/ycUtam1NdwP1tif9S4g=\", false, function () {\n  return [useParams];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/samerkadih/Desktop/Coding/Personal/React/kelly-criterion/src/pages/Game.js"],"names":["useState","useEffect","useParams","classes","Graph","getRandomInt","min","max","Math","ceil","floor","random","Game","score","setScore","kellyScore","setKellyScore","text","setText","lowerB","setLowerB","upperB","setUpperB","questionBounds","setQuestionBounds","questionType","setQuestionType","qT","lowQB","upperQB","difficulty","time","round","setRound","timer","setTimer","scoreHistory","setScoreHistory","kellyScoreHistory","setKellyScoreHistory","roundInterval","setInterval","handleRound","clearInterval","redistributeWealth","console","log","ensureValidInput","e","re","target","value","test","checkUserInput","key","remaining","question","odds","questionText","terminal","results"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Game.module.css\";\nimport Graph from \"../components/Graph\";\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction Game() {\n  const [score, setScore] = useState(100);\n  const [kellyScore, setKellyScore] = useState(100);\n  const [text, setText] = useState(\"\");\n\n  const [lowerB, setLowerB] = useState(0);\n  const [upperB, setUpperB] = useState(0);\n  const [questionBounds, setQuestionBounds] = useState(0);\n\n  const [questionType, setQuestionType] = useState(() => {\n    let qT = getRandomInt(0, 3);\n    if (qT === 0) {\n      let lowQB = getRandomInt(1, 51);\n      let upperQB = getRandomInt(51, 101);\n      setQuestionBounds([lowQB, upperQB]);\n      setLowerB(getRandomInt(lowQB, (lowQB + upperQB) / 2));\n      setUpperB(getRandomInt((lowQB + upperQB) / 2, upperQB));\n    } else if (qT === 1) {\n      setQuestionBounds(getRandomInt(1, 2));\n    } else {\n      setQuestionBounds(getRandomInt(1, 3));\n    }\n    return qT;\n  });\n\n  const { difficulty, time } = useParams();\n  const [round, setRound] = useState(1);\n  const [timer, setTimer] = useState(time);\n  const [scoreHistory, setScoreHistory] = useState([[0, 100]]);\n  const [kellyScoreHistory, setKellyScoreHistory] = useState([[0, 100]]);\n\n  let roundInterval;\n  useEffect(() => {\n    roundInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      }\n      if (timer === 0) {\n        handleRound();\n      }\n    }, 1000);\n    return () => {\n      clearInterval(roundInterval);\n    };\n  }, [timer]);\n\n  const redistributeWealth = () => {\n    if (questionType === 0) {\n    } else if (questionType === 1) {\n    } else {\n    }\n  };\n  const handleRound = () => {\n    if (round <= Math.floor(300 / time)) {\n      setTimer(time);\n      setScoreHistory([...scoreHistory, [round, score]]);\n      setKellyScoreHistory([...kellyScoreHistory, [round, kellyScore]]);\n      setRound(round + 1);\n      setQuestionType(() => {\n        let qT = getRandomInt(0, 3);\n        setQuestionBounds(() => {\n          if (qT === 0) {\n            return [getRandomInt(1, 51), getRandomInt(51, 101)];\n          } else if (qT === 1) {\n            return getRandomInt(1, 2);\n          } else {\n            return getRandomInt(1, 3);\n          }\n        });\n        return qT;\n      });\n      setText(\"\");\n      console.log(\"next round\");\n    }\n  };\n\n  const ensureValidInput = (e) => {\n    const re = /^[0-9]+$/;\n\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setText(e.target.value);\n    }\n  };\n\n  const checkUserInput = (e) => {\n    if (e.key === \"Enter\" && text !== \"\") {\n      handleRound();\n    }\n  };\n\n  return (\n    <div>\n      {(() => {\n        if (round <= Math.floor(300 / time)) {\n          return (\n            <div className={classes.remaining}>\n              <div className={classes.round}>Round: {round}</div>\n              <div className={classes.timer}>Time: {timer}</div>\n            </div>\n          );\n        }\n        return (\n          <div className={classes.remaining}>\n            <div>Game Over</div>\n          </div>\n        );\n      })()}\n      <div className={classes.question}>\n        <div className={classes.questionType}>\n          {(() => {\n            if (questionType === 0) {\n              return (\n                \"Uniform Random Variable between \" +\n                questionBounds[0] +\n                \" and \" +\n                questionBounds[1]\n              );\n            } else if (questionType === 1) {\n              return (\n                \"Rolling \" +\n                questionBounds +\n                (questionBounds === 1 ? \" die\" : \" dice\")\n              );\n            } else {\n              return (\n                \"Flipping \" +\n                questionBounds +\n                (questionBounds === 1 ? \" quarter\" : \" quarters\")\n              );\n            }\n          })()}\n        </div>\n        <div className={classes.odds}>W/L Odds: 20%, 100%</div>\n        <div className={classes.questionText}>This is the question</div>\n      </div>\n      <div className={classes.terminal}>\n        <div className={classes.score}>{score}</div>\n        <input\n          value={text}\n          onKeyDown={checkUserInput}\n          onChange={ensureValidInput}\n          placeholder=\"Bet amount\"\n        />\n        <div className={classes.score}>{kellyScore}</div>\n      </div>\n\n      <div className={classes.results}>\n        <Graph\n          key={round}\n          history={scoreHistory}\n          kellyHistory={kellyScoreHistory}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}