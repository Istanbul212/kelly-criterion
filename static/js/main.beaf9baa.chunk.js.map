{"version":3,"sources":["components/layout/MainNavigation.module.css","components/layout/Layout.module.css","pages/Landing.module.css","pages/Game.module.css","resources/hot-chocolate.jpg","components/layout/MainNavigation.js","components/layout/Layout.js","components/graphComponents/Box.js","components/Graph.js","pages/Game.js","pages/Landing.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","classes","header","to","logo","src","companyLogo","Layout","props","main","children","Box","width","height","resizable","style","Graph","data","React","useMemo","label","history","kellyHistory","axes","primary","type","position","background","padding","borderRadius","tooltip","dark","getRandomInt","min","max","Math","ceil","floor","random","GetZPercent","z","factK","sum","term","k","loopStop","exp","abs","pow","Game","roundInterval","useState","score","setScore","kellyScore","setKellyScore","text","setText","useParams","difficulty","time","lowerB","setLowerB","upperB","setUpperB","questionBounds","setQuestionBounds","qT","lowQB","upQB","lowB","upB","QB","questionType","setQuestionType","wO","setWO","lO","setLO","round","setRound","timer","setTimer","scoreHistory","setScoreHistory","kellyScoreHistory","setKellyScoreHistory","answer","setAnswer","delta","setDelta","kellyDelta","setKellyDelta","DCDF","CCDF","useEffect","setInterval","handleRound","clearInterval","wager","nAnswer","p","sqrt","i","kellyWager","redistributeWealth","wOP","lOP","remaining","question","odds","questionText","terminal","value","onKeyDown","e","key","parseInt","onChange","target","test","placeholder","results","Landing","instruction","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.beaf9baa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instruction\":\"Landing_instruction__TZAXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"remaining\":\"Game_remaining__1DIx9\",\"questionType\":\"Game_questionType__9SOsR\",\"odds\":\"Game_odds__3u2lh\",\"question\":\"Game_question__1aNoK\",\"results\":\"Game_results__Skg7K\",\"terminal\":\"Game_terminal__-gM5z\",\"score\":\"Game_score__1qii9\",\"delta\":\"Game_delta__1uGc1\"};","export default __webpack_public_path__ + \"static/media/hot-chocolate.d4dc4ddc.jpg\";","import { Link } from \"react-router-dom\";\n\nimport companyLogo from \"../../resources/hot-chocolate.jpg\";\nimport classes from \"./MainNavigation.module.css\";\n\nfunction MainNavigation() {\n  return (\n    <header className={classes.header}>\n      <nav>\n        <Link to=\"/kelly-criterion/\" className={classes.logo}>\n          <div>Trader's Tavern</div>\n          <img src={companyLogo} />\n        </Link>\n      </nav>\n    </header>\n  );\n}\n\nexport default MainNavigation;\n","import MainNavigation from \"./MainNavigation\";\nimport classes from \"./Layout.module.css\";\n\nfunction Layout(props) {\n  return (\n    <div>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n      <footer>Developed by Samer Kadih</footer>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react'\nimport { ResizableBox } from 'react-resizable'\n\nexport default function Box ({\n  children,\n  width = 500,\n  height = 300,\n  resizable = true,\n  style = {},\n  className,\n}) {\n  return (\n    <div>\n      {resizable ? (\n        <ResizableBox width={width} height={height}>\n          <div\n            style={{\n              ...style,\n              width: '100%',\n              height: '100%',\n            }}\n            className={className}\n          >\n            {children}\n          </div>\n        </ResizableBox>\n      ) : (\n        <div\n          style={{\n            width: `${width}px`,\n            height: `${height}px`,\n            ...style,\n          }}\n          className={className}\n        >\n          {children}\n        </div>\n      )}\n    </div>\n  )\n}","import React from 'react'\nimport Box from './graphComponents/Box'\nimport { Chart } from 'react-charts'\n\nfunction Graph(props) {\n  const data = React.useMemo(\n    () => [\n      {\n        label: \"Player\",\n        data: props.history,\n      },\n      {\n        label: \"Kelly Criterion\",\n        data: props.kellyHistory,\n      },\n    ],\n    []\n  );\n\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: \"linear\", position: \"bottom\" },\n      { type: \"linear\", position: \"left\" },\n    ],\n    []\n  );\n\n  const lineChart = (\n    // A react-chart hyper-responsively and continuously fills the available\n    // space of its parent element automatically\n    <Box\n        style={{\n          background: 'rgba(0, 27, 45, 0.9)',\n          padding: '0',\n          borderRadius: '5px',\n        }}\n      >\n      <Chart data={data} axes={axes} tooltip dark />\n    </Box>\n  );\n\n  return lineChart;\n}\n\nexport default Graph;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Game.module.css\";\nimport Graph from \"../components/Graph\";\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction GetZPercent(z) {\n  // z == number of standard deviations from the mean\n\n  // if z is greater than 6.5 standard deviations from the mean the\n  // number of significant digits will be outside of a reasonable range\n\n  if (z < -6.5) {\n    return 0.0;\n  }\n\n  if (z > 6.5) {\n    return 1.0;\n  }\n\n  var factK = 1;\n  var sum = 0;\n  var term = 1;\n  var k = 0;\n  var loopStop = Math.exp(-23);\n\n  while (Math.abs(term) > loopStop) {\n    term =\n      (((0.3989422804 * Math.pow(-1, k) * Math.pow(z, k)) /\n        (2 * k + 1) /\n        Math.pow(2, k)) *\n        Math.pow(z, k + 1)) /\n      factK;\n    sum += term;\n    k++;\n    factK *= k;\n  }\n\n  sum += 0.5;\n\n  return sum;\n}\n\nfunction Game() {\n  const [score, setScore] = useState(100);\n  const [kellyScore, setKellyScore] = useState(100);\n  const [text, setText] = useState(\"\");\n  const { difficulty, time } = useParams();\n\n  const [lowerB, setLowerB] = useState(0);\n  const [upperB, setUpperB] = useState(0);\n  const [questionBounds, setQuestionBounds] = useState(0);\n  const [questionType, setQuestionType] = useState(() => {\n    let qT = getRandomInt(0, 3);\n    if (qT === 0) {\n      let lowQB;\n      let upQB;\n      if (difficulty === \"casual\") {\n        lowQB = getRandomInt(1, 101);\n        upQB = getRandomInt(1, 101);\n      } else if (difficulty === \"practical\") {\n        lowQB = getRandomInt(1, 501);\n        upQB = getRandomInt(1, 501);\n      } else {\n        lowQB = getRandomInt(1, 1001);\n        upQB = getRandomInt(1, 1001);\n      }\n      setQuestionBounds([Math.min(lowQB, upQB), Math.max(lowQB, upQB)]);\n      let lowB = getRandomInt(lowQB, upQB + 1);\n      let upB = getRandomInt(lowQB, upQB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    } else if (qT === 1) {\n      let QB;\n      if (difficulty === \"casual\") {\n        QB = getRandomInt(1, 3);\n      } else if (difficulty === \"practical\") {\n        QB = getRandomInt(3, 6);\n      } else {\n        QB = getRandomInt(6, 101);\n      }\n      setQuestionBounds(QB);\n      let lowB = getRandomInt(QB, 6 * QB + 1);\n      let upB = getRandomInt(QB, 6 * QB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    } else {\n      let QB;\n      if (difficulty === \"casual\") {\n        QB = getRandomInt(1, 3);\n      } else if (difficulty === \"practical\") {\n        QB = getRandomInt(3, 6);\n      } else {\n        QB = getRandomInt(6, 101);\n      }\n      setQuestionBounds(QB);\n      let lowB = getRandomInt(0, QB + 1);\n      let upB = getRandomInt(0, QB + 1);\n      setLowerB(Math.min(lowB, upB));\n      setUpperB(Math.max(lowB, upB));\n    }\n    return qT;\n  });\n\n  const [wO, setWO] = useState(() => {\n    return 5 * getRandomInt(19, 31);\n  });\n  const [lO, setLO] = useState(() => {\n    if (difficulty === \"casual\") {\n      return 100;\n    } else {\n      return 5 * getRandomInt(16, 21);\n    }\n  });\n\n  const [round, setRound] = useState(1);\n  const [timer, setTimer] = useState(time);\n  const [scoreHistory, setScoreHistory] = useState([[0, 100]]);\n  const [kellyScoreHistory, setKellyScoreHistory] = useState([[0, 100]]);\n\n  const [answer, setAnswer] = useState(0);\n  const [delta, setDelta] = useState(0);\n  const [kellyDelta, setKellyDelta] = useState(0);\n\n  let DCDF = [\n    [0, 0.167, 0.333, 0.5, 0.667, 0.833, 1],\n    [\n      0, 0, 0.0278, 0.0833, 0.167, 0.2778, 0.4167, 0.583, 0.722, 0.833, 0.917,\n      0.972, 1,\n    ],\n    [\n      0, 0, 0, 0.00463, 0.0185, 0.0463, 0.0926, 0.162, 0.259, 0.375, 0.5, 0.625,\n      0.741, 0.838, 0.907, 0.954, 0.981, 0.995, 1,\n    ],\n    [\n      0,\n      0,\n      0,\n      0,\n      1 / 1296,\n      5 / 1296,\n      15 / 1296,\n      35 / 1296,\n      70 / 1296,\n      126 / 1296,\n      206 / 1296,\n      310 / 1296,\n      435 / 1296,\n      575 / 1296,\n      721 / 1296,\n      861 / 1296,\n      986 / 1296,\n      1090 / 1296,\n      1170 / 1296,\n      1226 / 1296,\n      1261 / 1296,\n      1281 / 1296,\n      1291 / 1296,\n      1295 / 1296,\n      1,\n    ],\n    [\n      0,\n      0,\n      0,\n      0,\n      0,\n      1 / 7776,\n      6 / 7776,\n      21 / 7776,\n      56 / 7776,\n      126 / 7776,\n      252 / 7776,\n      457 / 7776,\n      762 / 7776,\n      1182 / 7776,\n      1722 / 7776,\n      2373 / 7776,\n      3108 / 7776,\n      3888 / 7776,\n      4668 / 7776,\n      5403 / 7776,\n      6054 / 7776,\n      6594 / 7776,\n      7014 / 7776,\n      7319 / 7776,\n      7524 / 7776,\n      7650 / 7776,\n      7720 / 7776,\n      7755 / 7776,\n      7770 / 7776,\n      7775 / 7776,\n      1,\n    ],\n  ];\n  let CCDF = [\n    [0, 0.5, 1],\n    [0, 0.25, 0.75, 1],\n    [0, 0.125, 0.5, 0.875, 1],\n    [0, 0.0625, 0.3125, 0.6875, 0.9375, 1],\n    [0, 0.03125, 0.1875, 0.5, 0.8125, 0.96875, 1],\n  ];\n\n  let roundInterval;\n  useEffect(() => {\n    roundInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      }\n      if (timer === 0) {\n        handleRound(0);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(roundInterval);\n    };\n  }, [timer]);\n\n  const redistributeWealth = (wager) => {\n    let nAnswer = 0;\n    let p = 0;\n    if (questionType === 0) {\n      p = (upperB - lowerB + 1) / (questionBounds[1] - questionBounds[0] + 1);\n      nAnswer = getRandomInt(questionBounds[0], questionBounds[1] + 1);\n    } else if (questionType === 1) {\n      if (questionBounds <= 5) {\n        p =\n          DCDF[questionBounds - 1][upperB] -\n          DCDF[questionBounds - 1][lowerB - 1];\n      } else {\n        p =\n          GetZPercent(\n            (upperB - 3.5 * questionBounds) /\n              Math.sqrt((35 / 12) * questionBounds)\n          ) -\n          GetZPercent(\n            (lowerB - 3.5 * questionBounds) /\n              Math.sqrt((35 / 12) * questionBounds)\n          );\n      }\n      for (var i = 0; i < questionBounds; i++) {\n        nAnswer += getRandomInt(1, 7);\n      }\n    } else {\n      if (questionBounds <= 5) {\n        p =\n          CCDF[questionBounds - 1][upperB + 1] -\n          CCDF[questionBounds - 1][lowerB];\n      } else {\n        p =\n          GetZPercent(\n            (upperB - 0.5 * questionBounds) /\n              Math.sqrt(0.5 * 0.5 * questionBounds)\n          ) -\n          GetZPercent(\n            (lowerB - 0.5 * questionBounds) /\n              Math.sqrt(0.5 * 0.5 * questionBounds)\n          );\n      }\n      for (var i = 0; i < questionBounds; i++) {\n        nAnswer += getRandomInt(0, 2);\n      }\n    }\n    setAnswer(nAnswer);\n    let kellyWager = Math.max(\n      0,\n      Math.floor((p / (lO / 100) - (1 - p) / (wO / 100)) * kellyScore)\n    );\n    if (nAnswer >= lowerB && nAnswer <= upperB) {\n      setKellyDelta(Math.round((kellyWager * wO) / 100));\n      setKellyScore(() => {\n        setKellyScoreHistory([\n          ...kellyScoreHistory,\n          [round, kellyScore + Math.round((kellyWager * wO) / 100)],\n        ]);\n        return kellyScore + Math.round((kellyWager * wO) / 100);\n      });\n      setDelta(Math.round((wager * wO) / 100));\n      setScore(() => {\n        setScoreHistory([\n          ...scoreHistory,\n          [round, score + Math.round((wager * wO) / 100)],\n        ]);\n        return score + Math.round((wager * wO) / 100);\n      });\n    } else {\n      setKellyDelta(-1 * Math.round((kellyWager * lO) / 100));\n      setKellyScore(() => {\n        setKellyScoreHistory([\n          ...kellyScoreHistory,\n          [round, kellyScore - Math.round((kellyWager * lO) / 100)],\n        ]);\n        return kellyScore - Math.round((kellyWager * lO) / 100);\n      });\n      setDelta(-1 * Math.round((wager * lO) / 100));\n      setScore(() => {\n        setScoreHistory([\n          ...scoreHistory,\n          [round, score - Math.round((wager * lO) / 100)],\n        ]);\n        if (score === Math.round((wager * lO) / 100)) {\n          setRound(Math.floor(300 / time) + 1);\n        }\n        return score - Math.round((wager * lO) / 100);\n      });\n    }\n  };\n  const handleRound = (wager) => {\n    if (round <= Math.floor(300 / time)) {\n      setTimer(time);\n      redistributeWealth(wager);\n      setRound(round + 1);\n      let qT = getRandomInt(0, 3);\n      if (qT === 0) {\n        let lowQB;\n        let upQB;\n        if (difficulty === \"casual\") {\n          lowQB = getRandomInt(1, 101);\n          upQB = getRandomInt(1, 101);\n        } else if (difficulty === \"practical\") {\n          lowQB = getRandomInt(1, 501);\n          upQB = getRandomInt(1, 501);\n        } else {\n          lowQB = getRandomInt(1, 1001);\n          upQB = getRandomInt(1, 1001);\n        }\n        let lowB = getRandomInt(lowQB, upQB + 1);\n        let upB = getRandomInt(lowQB, upQB + 1);\n        setQuestionBounds([Math.min(lowQB, upQB), Math.max(lowQB, upQB)]);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      } else if (qT === 1) {\n        let QB;\n        if (difficulty === \"casual\") {\n          QB = getRandomInt(1, 3);\n        } else if (difficulty === \"practical\") {\n          QB = getRandomInt(3, 6);\n        } else {\n          QB = getRandomInt(6, 101);\n        }\n        let lowB = getRandomInt(QB, 6 * QB + 1);\n        let upB = getRandomInt(QB, 6 * QB + 1);\n        setQuestionBounds(QB);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      } else {\n        let QB;\n        if (difficulty === \"casual\") {\n          QB = getRandomInt(1, 3);\n        } else if (difficulty === \"practical\") {\n          QB = getRandomInt(3, 6);\n        } else {\n          QB = getRandomInt(6, 101);\n        }\n        let lowB = getRandomInt(0, QB + 1);\n        let upB = getRandomInt(0, QB + 1);\n        setQuestionBounds(QB);\n        setLowerB(Math.min(lowB, upB));\n        setUpperB(Math.max(lowB, upB));\n      }\n      setQuestionType(qT);\n      let wOP = getRandomInt(19, 31);\n      let lOP = getRandomInt(16, 21);\n      setWO(5 * wOP);\n      setLO(() => {\n        if (difficulty === \"casual\") {\n          return 100;\n        } else {\n          return 5 * lOP;\n        }\n      });\n      setText(\"\");\n    } else {\n      setTimer(-1);\n    }\n  };\n\n  const ensureValidInput = (e) => {\n    const re = /^[0-9]+$/;\n\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setText(e.target.value);\n    }\n  };\n\n  const checkUserInput = (e) => {\n    if (\n      e.key === \"Enter\" &&\n      text !== \"\" &&\n      text >= 0 &&\n      text <= (score * 100) / lO\n    ) {\n      handleRound(parseInt(text));\n    }\n  };\n\n  return (\n    <div>\n      {(() => {\n        if (round <= Math.floor(300 / time)) {\n          return (\n            <div className={classes.remaining}>\n              <div className={classes.round}>Round: {round}</div>\n              <div className={classes.timer}>Time: {timer}</div>\n            </div>\n          );\n        }\n        return (\n          <div className={classes.remaining}>\n            <div>Game Over</div>\n          </div>\n        );\n      })()}\n      <div className={classes.question}>\n        <div className={classes.questionType}>\n          {(() => {\n            if (questionType === 0) {\n              return (\n                \"Uniform Random Variable between \" +\n                questionBounds[0] +\n                \" and \" +\n                questionBounds[1]\n              );\n            } else if (questionType === 1) {\n              return (\n                \"Rolling \" +\n                questionBounds +\n                (questionBounds === 1 ? \" die\" : \" dice\")\n              );\n            } else {\n              return (\n                \"Flipping \" +\n                questionBounds +\n                (questionBounds === 1 ? \" quarter\" : \" quarters\")\n              );\n            }\n          })()}\n        </div>\n        <div className={classes.odds}>\n          W/L Odds: {wO}%, {lO}%\n        </div>\n        <div className={classes.questionText}>\n          {(() => {\n            if (questionType === 0) {\n              return (\n                \"Landing between \" + lowerB + \" and \" + upperB + \" inclusive\"\n              );\n            } else if (questionType === 1) {\n              return (\n                (questionBounds === 1\n                  ? \"Value between \"\n                  : \"Sum of values between \") +\n                lowerB +\n                \" and \" +\n                upperB +\n                \" inclusive\"\n              );\n            } else {\n              return \"Landing between \" + lowerB + \" and \" + upperB + \" heads\";\n            }\n          })()}\n        </div>\n        <div className={classes.delta}>\n          <div>{delta >= 0 ? \"+\" + delta : delta}</div>\n          <div>Landed Value: {answer}</div>\n          <div>{kellyDelta >= 0 ? \"+\" + kellyDelta : kellyDelta}</div>\n        </div>\n      </div>\n      <div className={classes.terminal}>\n        <div className={classes.score}>{score}</div>\n        <input\n          value={text}\n          onKeyDown={checkUserInput}\n          onChange={ensureValidInput}\n          placeholder=\"Bet amount\"\n        />\n        <div className={classes.score}>{kellyScore}</div>\n      </div>\n\n      <div className={classes.results}>\n        <Graph\n          key={round}\n          history={scoreHistory}\n          kellyHistory={kellyScoreHistory}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./Landing.module.css\";\n\nfunction Landing() {\n  return (\n    <div>\n      <div className={classes.instruction}>\n        Welcome to Trader's Tavern! This tool will help you make decisions on\n        the fly, with the intention of being reminisicent of a trader's\n        environment. Build an intuition for probability distributions by\n        competing against the Kelly Criterion. For now, the different\n        distributions supported are Uniform, Discrete (sum of multiple dice\n        rolls, approaches Gaussian), and Binomial (coin flipping). Select the\n        difficulty below, where each successive level will add complication to\n        the previous one. These complications will take the form of greater\n        variability, and the necessity to make quicker estimates of the\n        respective distributions. A live graph accompanies the game, comparing\n        your score to the Kelly score, to mock the stress that might be involved\n        in a live setting. For the best results, you should not let any biases\n        w.r.t the Kelly Criterion score influence your decisions. Also,\n        reminder: if the odds are that you lose less than 100% of your wager,\n        the house is absorbing the risk, so you are free to overbet so long as\n        you don't bust! Good luck!\n      </div>\n      <ul>\n        <Link to=\"/kelly-criterion/casual/12\">\n          <li>Casual</li>\n        </Link>\n        <Link to=\"/kelly-criterion/practical/6\">\n          <li>Practical</li>\n        </Link>\n        <Link to=\"/kelly-criterion/masochist/3\">\n          <li>Masochist</li>\n        </Link>\n      </ul>\n    </div>\n  );\n}\n\nexport default Landing;\n","import { Route, Switch } from \"react-router-dom\";\n\nimport Layout from \"./components/layout/Layout\";\n\nimport Game from \"./pages/Game\";\n\nimport Landing from \"./pages/Landing\"\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/kelly-criterion/\" exact>\n          <Landing />\n        </Route>\n        <Route path=\"/kelly-criterion/:difficulty/:time\">\n          <Game />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}